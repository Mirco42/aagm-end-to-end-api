<?xml version="1.0" encoding="UTF-8"?>
<wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy">
    <wsp:All wsp:Usage="Required">
        <L7p:CommentAssertion>
            <L7p:Comment stringValue="*** APIIDA Audit API for APIIDA API Gateway Manager ***"/>
        </L7p:CommentAssertion>
        <L7p:CommentAssertion>
            <L7p:Comment stringValue="*** Version: 2.3.0 ***"/>
        </L7p:CommentAssertion>
        <L7p:Include>
            <L7p:PolicyGuid stringValue="4233e607-67e4-4be8-818e-a0be884458b1"/>
            <L7p:PolicyName stringValue="APIIDA Authentication"/>
        </L7p:Include>
        <L7p:SetVariable>
            <L7p:Base64Expression stringValue="dHJ1ZQ=="/>
            <L7p:VariableToSet stringValue="clearCache"/>
        </L7p:SetVariable>
        <L7p:Include>
            <L7p:AssertionComment assertionComment="included">
                <L7p:Properties mapValue="included">
                    <L7p:entry>
                        <L7p:key stringValue="RIGHT.COMMENT"/>
                        <L7p:value stringValue=" // retrieve the profiling data"/>
                    </L7p:entry>
                </L7p:Properties>
            </L7p:AssertionComment>
            <L7p:PolicyGuid stringValue="2f703b7d-3821-48ee-a6c3-19412ec5dca3"/>
            <L7p:PolicyName stringValue="apiida.utils.profiling.include.profiling"/>
        </L7p:Include>
        <wsp:OneOrMore wsp:Usage="Required">
            <L7p:EvaluateJsonPathExpression>
                <L7p:Expression stringValue="$.profilingEvents"/>
                <L7p:OtherTargetMessageVariable stringValue="eventData"/>
                <L7p:Target target="OTHER"/>
                <L7p:VariablePrefix stringValue="_events"/>
            </L7p:EvaluateJsonPathExpression>
            <wsp:All wsp:Usage="Required">
                <L7p:AuditDetailAssertion>
                    <L7p:Detail stringValue="No profiling data exists or invalid JSON data"/>
                    <L7p:Level stringValue="WARNING"/>
                    <L7p:LoggingOnly booleanValue="true"/>
                </L7p:AuditDetailAssertion>
                <L7p:CustomizeErrorResponse>
                    <L7p:Content stringValueReference="inline"><![CDATA[{
    "code": "500",
    "message": "Internal Server Error - No profiling data exists or invalid JSON data"
}]]></L7p:Content>
                    <L7p:ContentType stringValue="application/json; charset=UTF-8"/>
                    <L7p:ExtraHeaders nameValuePairArray="included"/>
                </L7p:CustomizeErrorResponse>
                <L7p:RaiseError/>
            </wsp:All>
            <L7p:assertionComment>
                <L7p:Properties mapValue="included">
                    <L7p:entry>
                        <L7p:key stringValue="RIGHT.COMMENT"/>
                        <L7p:value stringValue=" // data exists ?"/>
                    </L7p:entry>
                </L7p:Properties>
            </L7p:assertionComment>
        </wsp:OneOrMore>
        <wsp:OneOrMore wsp:Usage="Required">
            <wsp:All wsp:Usage="Required">
                <L7p:SetVariable>
                    <L7p:Base64Expression stringValue="PHJvb3Q+PC9yb290Pg=="/>
                    <L7p:ContentType stringValue="text/xml; charset=utf-8"/>
                    <L7p:DataType variableDataType="message"/>
                    <L7p:LineBreak lineBreak="LF"/>
                    <L7p:VariableToSet stringValue="profilingXml"/>
                </L7p:SetVariable>
                <L7p:ForEachLoop L7p:Usage="Required"
                    loopVariable="_events.results" variablePrefix="rec">
                    <L7p:SetVariable>
                        <L7p:Base64Expression stringValue="JHtyZWMuY3VycmVudH0="/>
                        <L7p:ContentType stringValue="application/json; charset=utf-8"/>
                        <L7p:DataType variableDataType="message"/>
                        <L7p:LineBreak lineBreak="LF"/>
                        <L7p:VariableToSet stringValue="item"/>
                    </L7p:SetVariable>
                    <wsp:OneOrMore wsp:Usage="Required">
                        <L7p:EvaluateJsonPathExpression>
                            <L7p:Expression stringValue="$.nodeName"/>
                            <L7p:OtherTargetMessageVariable stringValue="item"/>
                            <L7p:Target target="OTHER"/>
                            <L7p:VariablePrefix stringValue="_nodeName"/>
                        </L7p:EvaluateJsonPathExpression>
                        <L7p:SetVariable>
                            <L7p:Base64Expression stringValue="TkE="/>
                            <L7p:LineBreak lineBreak="LF"/>
                            <L7p:VariableToSet stringValue="_nodeName.result"/>
                        </L7p:SetVariable>
                        <L7p:assertionComment>
                            <L7p:Properties mapValue="included">
                                <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue=" // nodeName"/>
                                </L7p:entry>
                            </L7p:Properties>
                        </L7p:assertionComment>
                    </wsp:OneOrMore>
                    <wsp:OneOrMore wsp:Usage="Required">
                        <L7p:EvaluateJsonPathExpression>
                            <L7p:Expression stringValue="$.service"/>
                            <L7p:OtherTargetMessageVariable stringValue="item"/>
                            <L7p:Target target="OTHER"/>
                            <L7p:VariablePrefix stringValue="_service"/>
                        </L7p:EvaluateJsonPathExpression>
                        <L7p:SetVariable>
                            <L7p:Base64Expression stringValue="TkE="/>
                            <L7p:LineBreak lineBreak="LF"/>
                            <L7p:VariableToSet stringValue="_service.result"/>
                        </L7p:SetVariable>
                        <L7p:assertionComment>
                            <L7p:Properties mapValue="included">
                                <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue=" // service"/>
                                </L7p:entry>
                            </L7p:Properties>
                        </L7p:assertionComment>
                    </wsp:OneOrMore>
                    <wsp:OneOrMore wsp:Usage="Required">
                        <L7p:EvaluateJsonPathExpression>
                            <L7p:Expression stringValue="$.event"/>
                            <L7p:OtherTargetMessageVariable stringValue="item"/>
                            <L7p:Target target="OTHER"/>
                            <L7p:VariablePrefix stringValue="_event"/>
                        </L7p:EvaluateJsonPathExpression>
                        <L7p:SetVariable>
                            <L7p:Base64Expression stringValue="TkE="/>
                            <L7p:LineBreak lineBreak="LF"/>
                            <L7p:VariableToSet stringValue="_event.result"/>
                        </L7p:SetVariable>
                        <L7p:assertionComment>
                            <L7p:Properties mapValue="included">
                                <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue=" // event"/>
                                </L7p:entry>
                            </L7p:Properties>
                        </L7p:assertionComment>
                    </wsp:OneOrMore>
                    <wsp:OneOrMore wsp:Usage="Required">
                        <L7p:EvaluateJsonPathExpression>
                            <L7p:Expression stringValue="$.startTime"/>
                            <L7p:OtherTargetMessageVariable stringValue="item"/>
                            <L7p:Target target="OTHER"/>
                            <L7p:VariablePrefix stringValue="_startTime"/>
                        </L7p:EvaluateJsonPathExpression>
                        <L7p:SetVariable>
                            <L7p:Base64Expression stringValue="TkE="/>
                            <L7p:LineBreak lineBreak="LF"/>
                            <L7p:VariableToSet stringValue="_startTime.result"/>
                        </L7p:SetVariable>
                        <L7p:assertionComment>
                            <L7p:Properties mapValue="included">
                                <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue=" // startTime"/>
                                </L7p:entry>
                            </L7p:Properties>
                        </L7p:assertionComment>
                    </wsp:OneOrMore>
                    <wsp:OneOrMore wsp:Usage="Required">
                        <L7p:EvaluateJsonPathExpression>
                            <L7p:Expression stringValue="$.startms"/>
                            <L7p:OtherTargetMessageVariable stringValue="item"/>
                            <L7p:Target target="OTHER"/>
                            <L7p:VariablePrefix stringValue="_startms"/>
                        </L7p:EvaluateJsonPathExpression>
                        <L7p:SetVariable>
                            <L7p:Base64Expression stringValue="MA=="/>
                            <L7p:LineBreak lineBreak="LF"/>
                            <L7p:VariableToSet stringValue="_startms.result"/>
                        </L7p:SetVariable>
                        <L7p:assertionComment>
                            <L7p:Properties mapValue="included">
                                <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue=" // startms"/>
                                </L7p:entry>
                            </L7p:Properties>
                        </L7p:assertionComment>
                    </wsp:OneOrMore>
                    <wsp:OneOrMore wsp:Usage="Required">
                        <L7p:EvaluateJsonPathExpression>
                            <L7p:Expression stringValue="$.elapsedTimeMillis"/>
                            <L7p:OtherTargetMessageVariable stringValue="item"/>
                            <L7p:Target target="OTHER"/>
                            <L7p:VariablePrefix stringValue="_elapsedTimeMillis"/>
                        </L7p:EvaluateJsonPathExpression>
                        <L7p:SetVariable>
                            <L7p:Base64Expression stringValue="MA=="/>
                            <L7p:LineBreak lineBreak="LF"/>
                            <L7p:VariableToSet stringValue="_elapsedTimeMillis.result"/>
                        </L7p:SetVariable>
                        <L7p:assertionComment>
                            <L7p:Properties mapValue="included">
                                <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue=" // elapsedTimeMillis"/>
                                </L7p:entry>
                            </L7p:Properties>
                        </L7p:assertionComment>
                    </wsp:OneOrMore>
                    <wsp:OneOrMore wsp:Usage="Required">
                        <L7p:EvaluateJsonPathExpression>
                            <L7p:Expression stringValue="$.requesterIp"/>
                            <L7p:OtherTargetMessageVariable stringValue="item"/>
                            <L7p:Target target="OTHER"/>
                            <L7p:VariablePrefix stringValue="_requesterIp"/>
                        </L7p:EvaluateJsonPathExpression>
                        <L7p:SetVariable>
                            <L7p:Base64Expression stringValue="TkE="/>
                            <L7p:LineBreak lineBreak="LF"/>
                            <L7p:VariableToSet stringValue="_requesterIp.result"/>
                        </L7p:SetVariable>
                        <L7p:assertionComment>
                            <L7p:Properties mapValue="included">
                                <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue=" // requesterIp"/>
                                </L7p:entry>
                            </L7p:Properties>
                        </L7p:assertionComment>
                    </wsp:OneOrMore>
                    <L7p:SetVariable>
                        <L7p:Base64Expression stringValue="PHJlYyBub2RlPSIke19ub2RlTmFtZS5yZXN1bHR9IiBzZXJ2aWNlPSIke19zZXJ2aWNlLnJlc3VsdH0iIGV2ZW50PSIke19ldmVudC5yZXN1bHR9IiByZXF1ZXN0ZXJJcD0iJHtfcmVxdWVzdGVySXAucmVzdWx0fSI+JHtfZWxhcHNlZFRpbWVNaWxsaXMucmVzdWx0fTwvcmVjPg=="/>
                        <L7p:ContentType stringValue="text/xml; charset=utf-8"/>
                        <L7p:DataType variableDataType="message"/>
                        <L7p:LineBreak lineBreak="LF"/>
                        <L7p:VariableToSet stringValue="itemXml"/>
                    </L7p:SetVariable>
                    <L7p:ResponseXpathAssertion>
                        <L7p:AssertionComment assertionComment="included">
                            <L7p:Properties mapValue="included">
                                <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue=" // add ref"/>
                                </L7p:entry>
                            </L7p:Properties>
                        </L7p:AssertionComment>
                        <L7p:VariablePrefix stringValue="_ref"/>
                        <L7p:XmlMsgSrc stringValue="profilingXml"/>
                        <L7p:XpathExpression xpathExpressionValue="included">
                            <L7p:Expression stringValue="/root"/>
                            <L7p:XpathVersion xpathVersion="XPATH_1_0"/>
                        </L7p:XpathExpression>
                    </L7p:ResponseXpathAssertion>
                    <L7p:RemoveElement>
                        <L7p:AssertionComment assertionComment="included">
                            <L7p:Properties mapValue="included">
                                <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue=" // add"/>
                                </L7p:entry>
                            </L7p:Properties>
                        </L7p:AssertionComment>
                        <L7p:ElementFromVariable stringValue="_ref.elements[0]"/>
                        <L7p:ElementToInsertVariable stringValue="itemXml.mainpart"/>
                        <L7p:InsertedElementLocation insertedElementLocation="LAST_CHILD"/>
                        <L7p:OtherTargetMessageVariable stringValue="profilingXml"/>
                        <L7p:Target target="OTHER"/>
                    </L7p:RemoveElement>
                </L7p:ForEachLoop>
                <wsp:OneOrMore wsp:Usage="Required">
                    <wsp:All wsp:Usage="Required">
                        <L7p:ComparisonAssertion>
                            <L7p:CaseSensitive booleanValue="false"/>
                            <L7p:Expression1 stringValue="${request.http.parameters.withRequesterIp}"/>
                            <L7p:Operator operatorNull="null"/>
                            <L7p:Predicates predicates="included">
                                <L7p:item dataType="included">
                                    <L7p:Type variableDataType="string"/>
                                </L7p:item>
                                <L7p:item binary="included">
                                    <L7p:CaseSensitive booleanValue="false"/>
                                    <L7p:RightValue stringValue="true"/>
                                </L7p:item>
                            </L7p:Predicates>
                        </L7p:ComparisonAssertion>
                        <L7p:XslTransformation>
                            <L7p:Direction intValue="-1"/>
                            <L7p:OtherTargetMessageVariable stringValue="profilingXml"/>
                            <L7p:ResourceInfo staticResourceInfo="included">
                                <L7p:Document stringValueReference="inline"><![CDATA[<xsl:stylesheet exclude-result-prefixes="xs" version="2.0" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
   <xsl:output indent="yes" omit-xml-declaration="yes"/>
   <xsl:template name="putAttributes">
      <xsl:attribute name="node"><xsl:value-of select="@node"/></xsl:attribute>
      <xsl:attribute name="service"><xsl:value-of select="@service"/></xsl:attribute>
      <xsl:attribute name="event"><xsl:value-of select="@event"/></xsl:attribute>
   </xsl:template>
   <xsl:template name="putAttributesWithIp">
      <xsl:call-template name="putAttributes"/>
      <xsl:attribute name="requesterIp"><xsl:value-of select="@requesterIp"/></xsl:attribute>
   </xsl:template>
   <xsl:template name="putAttributesAvg">
      <xsl:attribute name="valueType">avg</xsl:attribute>
      <xsl:value-of select="round(avg(current-group()/text()))"/>
   </xsl:template>
   <xsl:template name="putAttributesMin">
      <xsl:attribute name="valueType">min</xsl:attribute>
      <xsl:value-of select="min(current-group()/text())"/>
   </xsl:template>
   <xsl:template name="putAttributesMax">
      <xsl:attribute name="valueType">max</xsl:attribute>
      <xsl:value-of select="max(current-group()/text())"/>
   </xsl:template>
   <xsl:template name="putAttributesCount">
      <xsl:attribute name="valueType">count</xsl:attribute>
      <xsl:value-of select="count(current-group()/text())"/>
   </xsl:template>
   <xsl:template match="node()|@*">
      <xsl:copy>
         <xsl:apply-templates select="node()|@*"/>
      </xsl:copy>
   </xsl:template>
   <xsl:template match="root">
      <root>
         <profiling>
            <xsl:for-each-group group-by="concat(@node, '+', @service, '+', @event)" select="rec">
               <xsl:element name="rec">
                  <xsl:call-template name="putAttributes"/>
                  <xsl:call-template name="putAttributesAvg"/>
               </xsl:element>
               <xsl:element name="rec">
                  <xsl:call-template name="putAttributes"/>
                  <xsl:call-template name="putAttributesMin"/>
               </xsl:element>
               <xsl:element name="rec">
                  <xsl:call-template name="putAttributes"/>
                  <xsl:call-template name="putAttributesMax"/>
               </xsl:element>
               <xsl:element name="rec">
                  <xsl:call-template name="putAttributes"/>
                  <xsl:call-template name="putAttributesCount"/>
               </xsl:element>
            </xsl:for-each-group>
         </profiling>
         <profilingWithRequesterIp>
            <xsl:for-each-group group-by="concat(@node, '+', @service, '+', @event, '+', @requesterIp)" select="rec">
               <xsl:element name="rec">
                  <xsl:call-template name="putAttributesWithIp"/>
                  <xsl:call-template name="putAttributesAvg"/>
               </xsl:element>
               <xsl:element name="rec">
                  <xsl:call-template name="putAttributesWithIp"/>
                  <xsl:call-template name="putAttributesMin"/>
               </xsl:element>
               <xsl:element name="rec">
                  <xsl:call-template name="putAttributesWithIp"/>
                  <xsl:call-template name="putAttributesMax"/>
               </xsl:element>
               <xsl:element name="rec">
                  <xsl:call-template name="putAttributesWithIp"/>
                  <xsl:call-template name="putAttributesCount"/>
               </xsl:element>
            </xsl:for-each-group>
         </profilingWithRequesterIp>
      </root>
   </xsl:template>
</xsl:stylesheet>]]></L7p:Document>
                            </L7p:ResourceInfo>
                            <L7p:Target target="OTHER"/>
                            <L7p:TransformName stringValue=""/>
                            <L7p:XsltVersion stringValue="2.0"/>
                        </L7p:XslTransformation>
                        <L7p:AuditDetailAssertion>
                            <L7p:Detail stringValue="XSLT assertion latency (with requester ip): ${assertion.latency.ms}"/>
                            <L7p:Level stringValue="WARNING"/>
                            <L7p:LoggingOnly booleanValue="true"/>
                        </L7p:AuditDetailAssertion>
                    </wsp:All>
                    <wsp:All wsp:Usage="Required">
                        <L7p:XslTransformation>
                            <L7p:Direction intValue="-1"/>
                            <L7p:OtherTargetMessageVariable stringValue="profilingXml"/>
                            <L7p:ResourceInfo staticResourceInfo="included">
                                <L7p:Document stringValueReference="inline"><![CDATA[<xsl:stylesheet exclude-result-prefixes="xs" version="2.0" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
   <xsl:output indent="yes" omit-xml-declaration="yes"/>
   <xsl:template name="putAttributes">
      <xsl:attribute name="node"><xsl:value-of select="@node"/></xsl:attribute>
      <xsl:attribute name="service"><xsl:value-of select="@service"/></xsl:attribute>
      <xsl:attribute name="event"><xsl:value-of select="@event"/></xsl:attribute>
   </xsl:template>
   <xsl:template name="putAttributesWithIp">
      <xsl:call-template name="putAttributes"/>
      <xsl:attribute name="requesterIp"><xsl:value-of select="@requesterIp"/></xsl:attribute>
   </xsl:template>
   <xsl:template name="putAttributesAvg">
      <xsl:attribute name="valueType">avg</xsl:attribute>
      <xsl:value-of select="round(avg(current-group()/text()))"/>
   </xsl:template>
   <xsl:template name="putAttributesMin">
      <xsl:attribute name="valueType">min</xsl:attribute>
      <xsl:value-of select="min(current-group()/text())"/>
   </xsl:template>
   <xsl:template name="putAttributesMax">
      <xsl:attribute name="valueType">max</xsl:attribute>
      <xsl:value-of select="max(current-group()/text())"/>
   </xsl:template>
   <xsl:template name="putAttributesCount">
      <xsl:attribute name="valueType">count</xsl:attribute>
      <xsl:value-of select="count(current-group()/text())"/>
   </xsl:template>
   <xsl:template match="node()|@*">
      <xsl:copy>
         <xsl:apply-templates select="node()|@*"/>
      </xsl:copy>
   </xsl:template>
   <xsl:template match="root">
      <root>
         <profiling>
            <xsl:for-each-group group-by="concat(@node, '+', @service, '+', @event)" select="rec">
               <xsl:element name="rec">
                  <xsl:call-template name="putAttributes"/>
                  <xsl:call-template name="putAttributesAvg"/>
               </xsl:element>
               <xsl:element name="rec">
                  <xsl:call-template name="putAttributes"/>
                  <xsl:call-template name="putAttributesMin"/>
               </xsl:element>
               <xsl:element name="rec">
                  <xsl:call-template name="putAttributes"/>
                  <xsl:call-template name="putAttributesMax"/>
               </xsl:element>
               <xsl:element name="rec">
                  <xsl:call-template name="putAttributes"/>
                  <xsl:call-template name="putAttributesCount"/>
               </xsl:element>
            </xsl:for-each-group>
         </profiling>
      </root>
   </xsl:template>
</xsl:stylesheet>]]></L7p:Document>
                            </L7p:ResourceInfo>
                            <L7p:Target target="OTHER"/>
                            <L7p:TransformName stringValue=""/>
                            <L7p:XsltVersion stringValue="2.0"/>
                        </L7p:XslTransformation>
                        <L7p:AuditDetailAssertion>
                            <L7p:Detail stringValue="XSLT assertion latency: ${assertion.latency.ms}"/>
                            <L7p:Level stringValue="WARNING"/>
                            <L7p:LoggingOnly booleanValue="true"/>
                        </L7p:AuditDetailAssertion>
                    </wsp:All>
                </wsp:OneOrMore>
                <L7p:JsonTransformation>
                    <L7p:OtherTargetMessageVariable stringValue="profilingXml"/>
                    <L7p:RootTagString stringValue=""/>
                    <L7p:Target target="OTHER"/>
                    <L7p:UseNumbersWhenPossible booleanValue="true"/>
                </L7p:JsonTransformation>
                <L7p:AuditDetailAssertion>
                    <L7p:Detail stringValue="JSON transformation latency: ${assertion.latency.ms}"/>
                    <L7p:Level stringValue="WARNING"/>
                    <L7p:LoggingOnly booleanValue="true"/>
                </L7p:AuditDetailAssertion>
                <L7p:EvaluateJsonPathExpressionV2>
                    <L7p:Expression stringValue="$.root"/>
                    <L7p:Target target="RESPONSE"/>
                </L7p:EvaluateJsonPathExpressionV2>
                <L7p:SetVariable>
                    <L7p:Base64Expression stringValue="JHtqc29uUGF0aC5yZXN1bHRzfQ=="/>
                    <L7p:ContentType stringValue="application/json; charset=utf-8"/>
                    <L7p:DataType variableDataType="message"/>
                    <L7p:VariableToSet stringValue="response"/>
                </L7p:SetVariable>
            </wsp:All>
            <wsp:All wsp:Usage="Required">
                <L7p:AuditDetailAssertion>
                    <L7p:Detail stringValue="Cannot prepare profiling data."/>
                    <L7p:Level stringValue="WARNING"/>
                    <L7p:LoggingOnly booleanValue="true"/>
                </L7p:AuditDetailAssertion>
                <L7p:CustomizeErrorResponse>
                    <L7p:Content stringValueReference="inline"><![CDATA[{
    "code": "500",
    "message": "Internal Server Error - Cannot prepare profiling data"
}]]></L7p:Content>
                    <L7p:ContentType stringValue="application/json; charset=UTF-8"/>
                    <L7p:ExtraHeaders nameValuePairArray="included"/>
                </L7p:CustomizeErrorResponse>
                <L7p:RaiseError/>
            </wsp:All>
            <L7p:assertionComment>
                <L7p:Properties mapValue="included">
                    <L7p:entry>
                        <L7p:key stringValue="RIGHT.COMMENT"/>
                        <L7p:value stringValue=" // prepare profiling data"/>
                    </L7p:entry>
                </L7p:Properties>
            </L7p:assertionComment>
        </wsp:OneOrMore>
    </wsp:All>
</wsp:Policy>
