<?xml version="1.0" encoding="UTF-8"?>
<wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy">
    <wsp:All wsp:Usage="Required">
        <L7p:CommentAssertion>
            <L7p:Comment stringValue="================================================================"/>
        </L7p:CommentAssertion>
        <L7p:CommentAssertion>
            <L7p:Comment stringValue="APIIDA Utility - StopProfiling"/>
        </L7p:CommentAssertion>
        <L7p:CommentAssertion>
            <L7p:Comment stringValue="-------------------------------------------------------------------------------------------"/>
        </L7p:CommentAssertion>
        <L7p:CommentAssertion>
            <L7p:Comment stringValue="INPUT:"/>
        </L7p:CommentAssertion>
        <L7p:CommentAssertion>
            <L7p:Comment stringValue="apiida.name (String) - The Profiling Name to use"/>
        </L7p:CommentAssertion>
        <L7p:CommentAssertion>
            <L7p:Comment stringValue="apiida.id (String) - The Profiling profile ID to use (optional, otherwise 'default' will be used)"/>
        </L7p:CommentAssertion>
        <L7p:CommentAssertion>
            <L7p:Comment stringValue="OUTPUT:"/>
        </L7p:CommentAssertion>
        <L7p:CommentAssertion>
            <L7p:Comment stringValue="apiida.var.elapsedTime (String) - Elapsed Time (ms) for given profiling event for reference purposes."/>
        </L7p:CommentAssertion>
        <L7p:CommentAssertion>
            <L7p:Comment stringValue="-------------------------------------------------------------------------------------------"/>
        </L7p:CommentAssertion>
        <L7p:CommentAssertion>
            <L7p:Comment stringValue="NOTES:"/>
        </L7p:CommentAssertion>
        <L7p:CommentAssertion>
            <L7p:Comment stringValue=" - Logging of event occurs twice, one for outputTypes LOG &amp; BOTH each. This is for speed when only LOG is used."/>
        </L7p:CommentAssertion>
        <L7p:CommentAssertion>
            <L7p:Comment stringValue="================================================================"/>
        </L7p:CommentAssertion>
        <L7p:CommentAssertion>
            <L7p:Comment stringValue=" "/>
        </L7p:CommentAssertion>
        <L7p:CommentAssertion>
            <L7p:Comment stringValue="------------------------------------------------------------------------"/>
        </L7p:CommentAssertion>
        <L7p:CommentAssertion>
            <L7p:Comment stringValue="Clear Return Variables"/>
        </L7p:CommentAssertion>
        <L7p:CommentAssertion>
            <L7p:Comment stringValue="------------------------------------------------------------------------"/>
        </L7p:CommentAssertion>
        <L7p:SetVariable>
            <L7p:Base64Expression stringValue=""/>
            <L7p:VariableToSet stringValue="apiida.var.elapsedTime"/>
        </L7p:SetVariable>
        <L7p:CommentAssertion>
            <L7p:Comment stringValue=" "/>
        </L7p:CommentAssertion>
        <L7p:CommentAssertion>
            <L7p:Comment stringValue="------------------------------------------------------------------------"/>
        </L7p:CommentAssertion>
        <L7p:CommentAssertion>
            <L7p:Comment stringValue="Stop Profiling Event"/>
        </L7p:CommentAssertion>
        <L7p:CommentAssertion>
            <L7p:Comment stringValue="------------------------------------------------------------------------"/>
        </L7p:CommentAssertion>
        <wsp:OneOrMore wsp:Usage="Required">
            <wsp:All wsp:Usage="Required">
                <L7p:ComparisonAssertion>
                    <L7p:AssertionComment assertionComment="included">
                        <L7p:Properties mapValue="included">
                            <L7p:entry>
                                <L7p:key stringValue="RIGHT.COMMENT"/>
                                <L7p:value stringValue="[Profiling Error occured]"/>
                            </L7p:entry>
                        </L7p:Properties>
                    </L7p:AssertionComment>
                    <L7p:CaseSensitive booleanValue="false"/>
                    <L7p:Expression1 stringValue="${service.apiida.utils.profiling.error}"/>
                    <L7p:Expression2 stringValue="false"/>
                    <L7p:Predicates predicates="included">
                        <L7p:item binary="included">
                            <L7p:CaseSensitive booleanValue="false"/>
                            <L7p:RightValue stringValue="false"/>
                        </L7p:item>
                    </L7p:Predicates>
                </L7p:ComparisonAssertion>
                <L7p:ComparisonAssertion>
                    <L7p:AssertionComment assertionComment="included">
                        <L7p:Properties mapValue="included">
                            <L7p:entry>
                                <L7p:key stringValue="RIGHT.COMMENT"/>
                                <L7p:value stringValue="[Profiling Logic Initialized]"/>
                            </L7p:entry>
                        </L7p:Properties>
                    </L7p:AssertionComment>
                    <L7p:CaseSensitive booleanValue="false"/>
                    <L7p:Expression1 stringValue="${service.apiida.utils.profiling.loaded}"/>
                    <L7p:Expression2 stringValue="true"/>
                    <L7p:Predicates predicates="included">
                        <L7p:item binary="included">
                            <L7p:CaseSensitive booleanValue="false"/>
                            <L7p:RightValue stringValue="true"/>
                        </L7p:item>
                    </L7p:Predicates>
                </L7p:ComparisonAssertion>
                <L7p:CommentAssertion>
                    <L7p:Comment stringValue=" "/>
                </L7p:CommentAssertion>
                <L7p:CommentAssertion>
                    <L7p:Comment stringValue="Capture Stop Elt &amp; Time"/>
                </L7p:CommentAssertion>
                <L7p:CommentAssertion>
                    <L7p:Comment stringValue=" "/>
                </L7p:CommentAssertion>
                <L7p:SetVariable>
                    <L7p:Base64Expression stringValue="JHtyZXF1ZXN0LmVsYXBzZWRUaW1lfQ=="/>
                    <L7p:VariableToSet stringValue="apiida.tempStopElt"/>
                </L7p:SetVariable>
                <L7p:SetVariable>
                    <L7p:Base64Expression stringValue="JHtnYXRld2F5LnRpbWUubWlsbGlzfQ=="/>
                    <L7p:DataType variableDataType="dateTime"/>
                    <L7p:DateFormat stringValue="&lt;Millisecond Timestamp>"/>
                    <L7p:DateOffsetExpression stringValue=""/>
                    <L7p:VariableToSet stringValue="apiida.tempStopTimeMs"/>
                </L7p:SetVariable>
                <L7p:CommentAssertion>
                    <L7p:Comment stringValue=" "/>
                </L7p:CommentAssertion>
                <L7p:CommentAssertion>
                    <L7p:Comment stringValue="Get Timespan since Start"/>
                </L7p:CommentAssertion>
                <L7p:CommentAssertion>
                    <L7p:Comment stringValue=" "/>
                </L7p:CommentAssertion>
                <wsp:OneOrMore wsp:Usage="Required">
                    <wsp:All wsp:Usage="Required">
                        <L7p:CommentAssertion>
                            <L7p:Comment stringValue=" "/>
                        </L7p:CommentAssertion>
                        <L7p:CommentAssertion>
                            <L7p:Comment stringValue="Extract Start ELT"/>
                        </L7p:CommentAssertion>
                        <L7p:CommentAssertion>
                            <L7p:Comment stringValue=" "/>
                        </L7p:CommentAssertion>
                        <L7p:SetVariable>
                            <L7p:Base64Expression stringValue="LCR7c2VydmljZS5hcGlpZGEudXRpbHMucHJvZmlsaW5nLmxvZ30s"/>
                            <L7p:VariableToSet stringValue="apiida.tempStartElt"/>
                        </L7p:SetVariable>
                        <L7p:Regex>
                            <L7p:AutoTarget booleanValue="false"/>
                            <L7p:CaptureVar stringValue="apiida.tempStartElt"/>
                            <L7p:OtherTargetMessageVariable stringValue="apiida.tempStartElt"/>
                            <L7p:PatternContainsVariables booleanValue="true"/>
                            <L7p:Regex stringValue=",${apiida.name}=([0-9]*)"/>
                            <L7p:Replace booleanValue="true"/>
                            <L7p:Replacement stringValue=""/>
                            <L7p:Target target="OTHER"/>
                        </L7p:Regex>
                        <L7p:ComparisonAssertion>
                            <L7p:CaseSensitive booleanValue="false"/>
                            <L7p:Expression1 stringValue="${apiida.tempStartElt.length}"/>
                            <L7p:Operator operatorNull="null"/>
                            <L7p:Predicates predicates="included">
                                <L7p:item dataType="included">
                                    <L7p:Type variableDataType="int"/>
                                </L7p:item>
                                <L7p:item binary="included">
                                    <L7p:Operator operator="GT"/>
                                    <L7p:RightValue stringValue="1"/>
                                </L7p:item>
                            </L7p:Predicates>
                        </L7p:ComparisonAssertion>
                        <L7p:SetVariable>
                            <L7p:Base64Expression stringValue="JHthcGlpZGEudGVtcFN0YXJ0RWx0WzFdfQ=="/>
                            <L7p:VariableToSet stringValue="apiida.tempStartElt"/>
                        </L7p:SetVariable>
                        <L7p:ComparisonAssertion>
                            <L7p:Expression1 stringValue="${apiida.tempStartElt}"/>
                            <L7p:Expression2 stringValue=""/>
                            <L7p:Negate booleanValue="true"/>
                            <L7p:Operator operator="EMPTY"/>
                            <L7p:Predicates predicates="included">
                                <L7p:item binary="included">
                                    <L7p:Negated booleanValue="true"/>
                                    <L7p:Operator operator="EMPTY"/>
                                    <L7p:RightValue stringValue=""/>
                                </L7p:item>
                            </L7p:Predicates>
                        </L7p:ComparisonAssertion>
                        <L7p:CommentAssertion>
                            <L7p:Comment stringValue=" "/>
                        </L7p:CommentAssertion>
                        <L7p:CommentAssertion>
                            <L7p:Comment stringValue="Extract Start Time"/>
                        </L7p:CommentAssertion>
                        <L7p:CommentAssertion>
                            <L7p:Comment stringValue=" "/>
                        </L7p:CommentAssertion>
                        <L7p:SetVariable>
                            <L7p:Base64Expression stringValue="LCR7c2VydmljZS5hcGlpZGEudXRpbHMucHJvZmlsaW5nLmxvZ30s"/>
                            <L7p:VariableToSet stringValue="apiida.tempStartTimeMs"/>
                        </L7p:SetVariable>
                        <L7p:Regex>
                            <L7p:AutoTarget booleanValue="false"/>
                            <L7p:CaptureVar stringValue="apiida.tempStartTimeMs"/>
                            <L7p:OtherTargetMessageVariable stringValue="apiida.tempStartTimeMs"/>
                            <L7p:PatternContainsVariables booleanValue="true"/>
                            <L7p:Regex stringValue=",${apiida.name}=[0-9]*;timeStamp=([a-zA-Z0-9-:.]*)"/>
                            <L7p:Replace booleanValue="true"/>
                            <L7p:Replacement stringValue=""/>
                            <L7p:Target target="OTHER"/>
                        </L7p:Regex>
                        <L7p:ComparisonAssertion>
                            <L7p:CaseSensitive booleanValue="false"/>
                            <L7p:Expression1 stringValue="${apiida.tempStartTimeMs.length}"/>
                            <L7p:Operator operatorNull="null"/>
                            <L7p:Predicates predicates="included">
                                <L7p:item dataType="included">
                                    <L7p:Type variableDataType="int"/>
                                </L7p:item>
                                <L7p:item binary="included">
                                    <L7p:Operator operator="GT"/>
                                    <L7p:RightValue stringValue="1"/>
                                </L7p:item>
                            </L7p:Predicates>
                        </L7p:ComparisonAssertion>
                        <L7p:SetVariable>
                            <L7p:Base64Expression stringValue="JHthcGlpZGEudGVtcFN0YXJ0VGltZU1zWzFdfQ=="/>
                            <L7p:VariableToSet stringValue="apiida.tempStartTimeMs"/>
                        </L7p:SetVariable>
                        <L7p:Regex>
                            <L7p:AutoTarget booleanValue="false"/>
                            <L7p:OtherTargetMessageVariable stringValue="apiida.tempStartTimeMs"/>
                            <L7p:Regex stringValue="\,(.*)"/>
                            <L7p:Replace booleanValue="true"/>
                            <L7p:Replacement stringValue=""/>
                            <L7p:Target target="OTHER"/>
                        </L7p:Regex>
                        <L7p:SetVariable>
                            <L7p:Base64Expression stringValue="JHthcGlpZGEudGVtcFN0YXJ0VGltZU1zfQ=="/>
                            <L7p:DataType variableDataType="dateTime"/>
                            <L7p:DateFormat stringValue="&lt;Millisecond Timestamp>"/>
                            <L7p:DateOffsetExpression stringValue=""/>
                            <L7p:VariableToSet stringValue="apiida.tempStartTimeMs"/>
                        </L7p:SetVariable>
                        <L7p:CommentAssertion>
                            <L7p:Comment stringValue=" "/>
                        </L7p:CommentAssertion>
                        <L7p:CommentAssertion>
                            <L7p:Comment stringValue="Calculate Elapsed Time"/>
                        </L7p:CommentAssertion>
                        <L7p:CommentAssertion>
                            <L7p:Comment stringValue=" "/>
                        </L7p:CommentAssertion>
                        <L7p:SetVariable>
                            <L7p:Base64Expression stringValue="PHByb2ZpbGVJbmZvPjwvcHJvZmlsZUluZm8+"/>
                            <L7p:ContentType stringValue="text/xml; charset=utf-8"/>
                            <L7p:DataType variableDataType="message"/>
                            <L7p:VariableToSet stringValue="apiida.tempProfile"/>
                        </L7p:SetVariable>
                        <L7p:XslTransformation>
                            <L7p:Direction intValue="-1"/>
                            <L7p:MsgVarPrefix stringValue="apiida.tempXslt"/>
                            <L7p:OtherTargetMessageVariable stringValue="apiida.tempProfile"/>
                            <L7p:ResourceInfo staticResourceInfo="included">
                                <L7p:Document stringValueReference="inline"><![CDATA[<xsl:stylesheet version="2.0" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
    <xsl:output indent="yes" method="xml" omit-xml-declaration="yes"/>
    
    <xsl:param name="apiida.tempStartElt" select="''"/>
    <xsl:param name="apiida.tempStopElt" select="''"/>
    
    
    <xsl:template match="*">
            <xsl:value-of select="number($apiida.tempStopElt) - number($apiida.tempStartElt)"/>        
    </xsl:template>
    
</xsl:stylesheet>]]></L7p:Document>
                            </L7p:ResourceInfo>
                            <L7p:Target target="OTHER"/>
                            <L7p:TransformName stringValue=""/>
                            <L7p:XsltVersion stringValue="1.0"/>
                        </L7p:XslTransformation>
                        <L7p:SetVariable>
                            <L7p:Base64Expression stringValue="JHthcGlpZGEudGVtcFByb2ZpbGUubWFpbnBhcnR9"/>
                            <L7p:VariableToSet stringValue="apiida.var.elapsedTime"/>
                        </L7p:SetVariable>
                        <L7p:Regex>
                            <L7p:AssertionComment assertionComment="included">
                                <L7p:Properties mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="[Remove Old Profiling Entry]"/>
                                    </L7p:entry>
                                </L7p:Properties>
                            </L7p:AssertionComment>
                            <L7p:AutoTarget booleanValue="false"/>
                            <L7p:OtherTargetMessageVariable stringValue="service.apiida.utils.profiling.log"/>
                            <L7p:PatternContainsVariables booleanValue="true"/>
                            <L7p:Regex stringValue="(,${apiida.name}=[a-zA-Z0-9\-;.:=_\(\)\[\] ]*)"/>
                            <L7p:Replace booleanValue="true"/>
                            <L7p:Replacement stringValue=""/>
                            <L7p:Target target="OTHER"/>
                        </L7p:Regex>
                    </wsp:All>
                    <wsp:All wsp:Usage="Required">
                        <L7p:Encapsulated>
                            <L7p:EncapsulatedAssertionConfigGuid stringValue="49dd455c-1208-43ce-becc-95884947d92f"/>
                            <L7p:EncapsulatedAssertionConfigName stringValue="APIIDA Utility - Log Internal String"/>
                            <L7p:Parameters mapValue="included">
                                <L7p:entry>
                                    <L7p:key stringValue="apiida.code"/>
                                    <L7p:value stringValue="022"/>
                                </L7p:entry>
                                <L7p:entry>
                                    <L7p:key stringValue="apiida.postString"/>
                                    <L7p:value stringValue="${apiida.name}"/>
                                </L7p:entry>
                                <L7p:entry>
                                    <L7p:key stringValue="apiida.preString"/>
                                    <L7p:value stringValue=""/>
                                </L7p:entry>
                            </L7p:Parameters>
                        </L7p:Encapsulated>
                        <L7p:FalseAssertion/>
                        <L7p:assertionComment>
                            <L7p:Properties mapValue="included">
                                <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="[WARNING (code 022) - Event Name not found]"/>
                                </L7p:entry>
                            </L7p:Properties>
                        </L7p:assertionComment>
                    </wsp:All>
                </wsp:OneOrMore>
                <L7p:CommentAssertion>
                    <L7p:Comment stringValue=" "/>
                </L7p:CommentAssertion>
                <L7p:CommentAssertion>
                    <L7p:Comment stringValue="Get Correct Profile"/>
                </L7p:CommentAssertion>
                <L7p:CommentAssertion>
                    <L7p:Comment stringValue=" "/>
                </L7p:CommentAssertion>
                <wsp:OneOrMore wsp:Usage="Required">
                    <wsp:All wsp:Usage="Required">
                        <L7p:ComparisonAssertion>
                            <L7p:CaseSensitive booleanValue="false"/>
                            <L7p:Expression1 stringValue="${apiida.id}"/>
                            <L7p:Expression2 stringValue="true"/>
                            <L7p:Negate booleanValue="true"/>
                            <L7p:Operator operator="EMPTY"/>
                            <L7p:Predicates predicates="included">
                                <L7p:item binary="included">
                                    <L7p:CaseSensitive booleanValue="false"/>
                                    <L7p:Negated booleanValue="true"/>
                                    <L7p:Operator operator="EMPTY"/>
                                    <L7p:RightValue stringValue="true"/>
                                </L7p:item>
                            </L7p:Predicates>
                        </L7p:ComparisonAssertion>
                        <wsp:OneOrMore wsp:Usage="Required">
                            <L7p:ResponseXpathAssertion>
                                <L7p:VariablePrefix stringValue="apiida.tempXPath"/>
                                <L7p:XmlMsgSrc stringValue="service.apiida.utils.profiling.profiles"/>
                                <L7p:XpathExpression xpathExpressionValue="included">
                                    <L7p:Expression stringValue="/profiles/profile[@id=$apiida.id]"/>
                                    <L7p:Namespaces mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="s"/>
                                    <L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/>
                                    </L7p:entry>
                                    </L7p:Namespaces>
                                    <L7p:XpathVersion xpathVersion="XPATH_1_0"/>
                                </L7p:XpathExpression>
                            </L7p:ResponseXpathAssertion>
                            <wsp:All wsp:Usage="Required">
                                <L7p:Encapsulated>
                                    <L7p:EncapsulatedAssertionConfigGuid stringValue="49dd455c-1208-43ce-becc-95884947d92f"/>
                                    <L7p:EncapsulatedAssertionConfigName stringValue="APIIDA Utility - Log Internal String"/>
                                    <L7p:Parameters mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="apiida.code"/>
                                    <L7p:value stringValue="023"/>
                                    </L7p:entry>
                                    <L7p:entry>
                                    <L7p:key stringValue="apiida.postString"/>
                                    <L7p:value stringValue="${apiida.id}"/>
                                    </L7p:entry>
                                    <L7p:entry>
                                    <L7p:key stringValue="apiida.preString"/>
                                    <L7p:value stringValue=""/>
                                    </L7p:entry>
                                    </L7p:Parameters>
                                </L7p:Encapsulated>
                                <L7p:FalseAssertion/>
                                <L7p:assertionComment>
                                    <L7p:Properties mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="[WARNING  (code 023) - Given Profile not found]"/>
                                    </L7p:entry>
                                    </L7p:Properties>
                                </L7p:assertionComment>
                            </wsp:All>
                        </wsp:OneOrMore>
                        <L7p:assertionComment>
                            <L7p:Properties mapValue="included">
                                <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="[Assigned Profile]"/>
                                </L7p:entry>
                            </L7p:Properties>
                        </L7p:assertionComment>
                    </wsp:All>
                    <wsp:All wsp:Usage="Required">
                        <L7p:SetVariable>
                            <L7p:Base64Expression stringValue="ZGVmYXVsdA=="/>
                            <L7p:VariableToSet stringValue="apiida.id"/>
                        </L7p:SetVariable>
                        <L7p:ResponseXpathAssertion>
                            <L7p:VariablePrefix stringValue="apiida.tempXPath"/>
                            <L7p:XmlMsgSrc stringValue="service.apiida.utils.profiling.profiles"/>
                            <L7p:XpathExpression xpathExpressionValue="included">
                                <L7p:Expression stringValue="/profiles/profile[@id=$apiida.id]"/>
                                <L7p:Namespaces mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="s"/>
                                    <L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/>
                                    </L7p:entry>
                                </L7p:Namespaces>
                                <L7p:XpathVersion xpathVersion="XPATH_1_0"/>
                            </L7p:XpathExpression>
                        </L7p:ResponseXpathAssertion>
                        <L7p:assertionComment>
                            <L7p:Properties mapValue="included">
                                <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="[Default Profile]"/>
                                </L7p:entry>
                            </L7p:Properties>
                        </L7p:assertionComment>
                    </wsp:All>
                    <wsp:All wsp:Usage="Required">
                        <L7p:SetVariable>
                            <L7p:Base64Expression stringValue="dHJ1ZQ=="/>
                            <L7p:VariableToSet stringValue="service.apiida.utils.profiling.error"/>
                        </L7p:SetVariable>
                        <L7p:Encapsulated>
                            <L7p:EncapsulatedAssertionConfigGuid stringValue="49dd455c-1208-43ce-becc-95884947d92f"/>
                            <L7p:EncapsulatedAssertionConfigName stringValue="APIIDA Utility - Log Internal String"/>
                            <L7p:Parameters mapValue="included">
                                <L7p:entry>
                                    <L7p:key stringValue="apiida.code"/>
                                    <L7p:value stringValue="024"/>
                                </L7p:entry>
                                <L7p:entry>
                                    <L7p:key stringValue="apiida.postString"/>
                                    <L7p:value stringValue=""/>
                                </L7p:entry>
                                <L7p:entry>
                                    <L7p:key stringValue="apiida.preString"/>
                                    <L7p:value stringValue=""/>
                                </L7p:entry>
                            </L7p:Parameters>
                        </L7p:Encapsulated>
                        <L7p:FalseAssertion/>
                        <L7p:assertionComment>
                            <L7p:Properties mapValue="included">
                                <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="[ERROR (code 024) - Default Profile not found]"/>
                                </L7p:entry>
                            </L7p:Properties>
                        </L7p:assertionComment>
                    </wsp:All>
                </wsp:OneOrMore>
                <L7p:CommentAssertion>
                    <L7p:Comment stringValue=" "/>
                </L7p:CommentAssertion>
                <L7p:CommentAssertion>
                    <L7p:Comment stringValue="Extract Profile Data"/>
                </L7p:CommentAssertion>
                <L7p:CommentAssertion>
                    <L7p:Comment stringValue=" "/>
                </L7p:CommentAssertion>
                <wsp:OneOrMore wsp:Usage="Required">
                    <wsp:All wsp:Usage="Required">
                        <L7p:SetVariable>
                            <L7p:Base64Expression stringValue="JHthcGlpZGEudGVtcFhQYXRoLmVsZW1lbnR9"/>
                            <L7p:ContentType stringValue="text/xml; charset=utf-8"/>
                            <L7p:DataType variableDataType="message"/>
                            <L7p:VariableToSet stringValue="apiida.tempProfile"/>
                        </L7p:SetVariable>
                        <L7p:CommentAssertion>
                            <L7p:Comment stringValue=" "/>
                        </L7p:CommentAssertion>
                        <L7p:CommentAssertion>
                            <L7p:Comment stringValue="Mandetory Fields"/>
                        </L7p:CommentAssertion>
                        <L7p:CommentAssertion>
                            <L7p:Comment stringValue=" "/>
                        </L7p:CommentAssertion>
                        <L7p:ResponseXpathAssertion>
                            <L7p:VariablePrefix stringValue="apiida.tempXPath"/>
                            <L7p:XmlMsgSrc stringValue="apiida.tempProfile"/>
                            <L7p:XpathExpression xpathExpressionValue="included">
                                <L7p:Expression stringValue="/profile/state"/>
                                <L7p:Namespaces mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="s"/>
                                    <L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/>
                                    </L7p:entry>
                                </L7p:Namespaces>
                                <L7p:XpathVersion xpathVersion="XPATH_2_0"/>
                            </L7p:XpathExpression>
                        </L7p:ResponseXpathAssertion>
                        <L7p:ComparisonAssertion>
                            <L7p:Expression1 stringValue="${apiida.tempXPath.result}"/>
                            <L7p:Expression2 stringValue=""/>
                            <L7p:Negate booleanValue="true"/>
                            <L7p:Operator operator="EMPTY"/>
                            <L7p:Predicates predicates="included">
                                <L7p:item binary="included">
                                    <L7p:Negated booleanValue="true"/>
                                    <L7p:Operator operator="EMPTY"/>
                                    <L7p:RightValue stringValue=""/>
                                </L7p:item>
                            </L7p:Predicates>
                        </L7p:ComparisonAssertion>
                        <L7p:SetVariable>
                            <L7p:Base64Expression stringValue="JHthcGlpZGEudGVtcFhQYXRoLnJlc3VsdH0="/>
                            <L7p:VariableToSet stringValue="apiida.tempState"/>
                        </L7p:SetVariable>
                        <L7p:ResponseXpathAssertion>
                            <L7p:VariablePrefix stringValue="apiida.tempXPath"/>
                            <L7p:XmlMsgSrc stringValue="apiida.tempProfile"/>
                            <L7p:XpathExpression xpathExpressionValue="included">
                                <L7p:Expression stringValue="/profile/outputType"/>
                                <L7p:Namespaces mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="s"/>
                                    <L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/>
                                    </L7p:entry>
                                </L7p:Namespaces>
                                <L7p:XpathVersion xpathVersion="XPATH_2_0"/>
                            </L7p:XpathExpression>
                        </L7p:ResponseXpathAssertion>
                        <L7p:ComparisonAssertion>
                            <L7p:Expression1 stringValue="${apiida.tempXPath.result}"/>
                            <L7p:Expression2 stringValue=""/>
                            <L7p:Negate booleanValue="true"/>
                            <L7p:Operator operator="EMPTY"/>
                            <L7p:Predicates predicates="included">
                                <L7p:item binary="included">
                                    <L7p:Negated booleanValue="true"/>
                                    <L7p:Operator operator="EMPTY"/>
                                    <L7p:RightValue stringValue=""/>
                                </L7p:item>
                            </L7p:Predicates>
                        </L7p:ComparisonAssertion>
                        <L7p:SetVariable>
                            <L7p:Base64Expression stringValue="JHthcGlpZGEudGVtcFhQYXRoLnJlc3VsdH0="/>
                            <L7p:VariableToSet stringValue="apiida.tempOutputType"/>
                        </L7p:SetVariable>
                        <L7p:CommentAssertion>
                            <L7p:Comment stringValue=" "/>
                        </L7p:CommentAssertion>
                        <L7p:CommentAssertion>
                            <L7p:Comment stringValue="IF state=disabled | outputType=none : Break; ELSE Process other outputType's"/>
                        </L7p:CommentAssertion>
                        <L7p:CommentAssertion>
                            <L7p:Comment stringValue=" "/>
                        </L7p:CommentAssertion>
                        <wsp:OneOrMore wsp:Usage="Required">
                            <L7p:ComparisonAssertion>
                                <L7p:CaseSensitive booleanValue="false"/>
                                <L7p:Expression1 stringValue="${apiida.tempState}"/>
                                <L7p:Expression2 stringValue="enabled"/>
                                <L7p:Negate booleanValue="true"/>
                                <L7p:Predicates predicates="included">
                                    <L7p:item binary="included">
                                    <L7p:CaseSensitive booleanValue="false"/>
                                    <L7p:Negated booleanValue="true"/>
                                    <L7p:RightValue stringValue="enabled"/>
                                    </L7p:item>
                                </L7p:Predicates>
                            </L7p:ComparisonAssertion>
                            <L7p:ComparisonAssertion>
                                <L7p:CaseSensitive booleanValue="false"/>
                                <L7p:Expression1 stringValue="${apiida.tempOutputType}"/>
                                <L7p:Expression2 stringValue="none"/>
                                <L7p:Predicates predicates="included">
                                    <L7p:item binary="included">
                                    <L7p:CaseSensitive booleanValue="false"/>
                                    <L7p:RightValue stringValue="none"/>
                                    </L7p:item>
                                </L7p:Predicates>
                            </L7p:ComparisonAssertion>
                            <wsp:All wsp:Usage="Required">
                                <L7p:CommentAssertion>
                                    <L7p:Comment stringValue=" "/>
                                </L7p:CommentAssertion>
                                <L7p:CommentAssertion>
                                    <L7p:Comment stringValue="Optional Fields"/>
                                </L7p:CommentAssertion>
                                <L7p:CommentAssertion>
                                    <L7p:Comment stringValue=" "/>
                                </L7p:CommentAssertion>
                                <wsp:OneOrMore wsp:Usage="Required">
                                    <wsp:All wsp:Usage="Required">
                                    <L7p:ResponseXpathAssertion>
                                    <L7p:VariablePrefix stringValue="apiida.tempXPath"/>
                                    <L7p:XmlMsgSrc stringValue="apiida.tempProfile"/>
                                    <L7p:XpathExpression xpathExpressionValue="included">
                                    <L7p:Expression stringValue="/profile/minimumTime"/>
                                    <L7p:Namespaces mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="s"/>
                                    <L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/>
                                    </L7p:entry>
                                    </L7p:Namespaces>
                                    <L7p:XpathVersion xpathVersion="XPATH_2_0"/>
                                    </L7p:XpathExpression>
                                    </L7p:ResponseXpathAssertion>
                                    <L7p:ComparisonAssertion>
                                    <L7p:Expression1 stringValue="${apiida.tempXPath.result}"/>
                                    <L7p:Expression2 stringValue=""/>
                                    <L7p:Negate booleanValue="true"/>
                                    <L7p:Operator operator="EMPTY"/>
                                    <L7p:Predicates predicates="included">
                                    <L7p:item binary="included">
                                    <L7p:Negated booleanValue="true"/>
                                    <L7p:Operator operator="EMPTY"/>
                                    <L7p:RightValue stringValue=""/>
                                    </L7p:item>
                                    </L7p:Predicates>
                                    </L7p:ComparisonAssertion>
                                    <L7p:SetVariable>
                                    <L7p:Base64Expression stringValue="JHthcGlpZGEudGVtcFhQYXRoLnJlc3VsdH0="/>
                                    <L7p:VariableToSet stringValue="apiida.tempMinimumTime"/>
                                    </L7p:SetVariable>
                                    </wsp:All>
                                    <L7p:SetVariable>
                                    <L7p:Base64Expression stringValue="MA=="/>
                                    <L7p:VariableToSet stringValue="apiida.tempMinimumTime"/>
                                    </L7p:SetVariable>
                                    <L7p:assertionComment>
                                    <L7p:Properties mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="[minimumTime (Optional)]"/>
                                    </L7p:entry>
                                    </L7p:Properties>
                                    </L7p:assertionComment>
                                </wsp:OneOrMore>
                                <wsp:OneOrMore wsp:Usage="Required">
                                    <wsp:All wsp:Usage="Required">
                                    <L7p:ResponseXpathAssertion>
                                    <L7p:VariablePrefix stringValue="apiida.tempXPath"/>
                                    <L7p:XmlMsgSrc stringValue="apiida.tempProfile"/>
                                    <L7p:XpathExpression xpathExpressionValue="included">
                                    <L7p:Expression stringValue="/profile/cacheTimeout"/>
                                    <L7p:Namespaces mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="s"/>
                                    <L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/>
                                    </L7p:entry>
                                    </L7p:Namespaces>
                                    <L7p:XpathVersion xpathVersion="XPATH_2_0"/>
                                    </L7p:XpathExpression>
                                    </L7p:ResponseXpathAssertion>
                                    <L7p:ComparisonAssertion>
                                    <L7p:Expression1 stringValue="${apiida.tempXPath.result}"/>
                                    <L7p:Expression2 stringValue=""/>
                                    <L7p:Negate booleanValue="true"/>
                                    <L7p:Operator operator="EMPTY"/>
                                    <L7p:Predicates predicates="included">
                                    <L7p:item binary="included">
                                    <L7p:Negated booleanValue="true"/>
                                    <L7p:Operator operator="EMPTY"/>
                                    <L7p:RightValue stringValue=""/>
                                    </L7p:item>
                                    </L7p:Predicates>
                                    </L7p:ComparisonAssertion>
                                    <L7p:SetVariable>
                                    <L7p:Base64Expression stringValue="JHthcGlpZGEudGVtcFhQYXRoLnJlc3VsdH0="/>
                                    <L7p:VariableToSet stringValue="apiida.tempCacheTimeout"/>
                                    </L7p:SetVariable>
                                    </wsp:All>
                                    <L7p:SetVariable>
                                    <L7p:Base64Expression stringValue="MzAw"/>
                                    <L7p:VariableToSet stringValue="apiida.tempCacheTimeout"/>
                                    </L7p:SetVariable>
                                    <L7p:assertionComment>
                                    <L7p:Properties mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="[cacheTimeout (Optional)]"/>
                                    </L7p:entry>
                                    </L7p:Properties>
                                    </L7p:assertionComment>
                                </wsp:OneOrMore>
                                <wsp:OneOrMore wsp:Usage="Required">
                                    <wsp:All wsp:Usage="Required">
                                    <L7p:ResponseXpathAssertion>
                                    <L7p:VariablePrefix stringValue="apiida.tempXPath"/>
                                    <L7p:XmlMsgSrc stringValue="apiida.tempProfile"/>
                                    <L7p:XpathExpression xpathExpressionValue="included">
                                    <L7p:Expression stringValue="/profile/cacheMaxSize"/>
                                    <L7p:Namespaces mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="s"/>
                                    <L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/>
                                    </L7p:entry>
                                    </L7p:Namespaces>
                                    <L7p:XpathVersion xpathVersion="XPATH_2_0"/>
                                    </L7p:XpathExpression>
                                    </L7p:ResponseXpathAssertion>
                                    <L7p:SetVariable>
                                    <L7p:Base64Expression stringValue="JHthcGlpZGEudGVtcFhQYXRoLnJlc3VsdH0="/>
                                    <L7p:VariableToSet stringValue="apiida.tempCacheMaxSize"/>
                                    </L7p:SetVariable>
                                    </wsp:All>
                                    <L7p:SetVariable>
                                    <L7p:Base64Expression stringValue="MTA0ODU3Ng=="/>
                                    <L7p:VariableToSet stringValue="apiida.tempCacheMaxSize"/>
                                    </L7p:SetVariable>
                                    <L7p:assertionComment>
                                    <L7p:Properties mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="[cacheMaxSize (Optional)]"/>
                                    </L7p:entry>
                                    </L7p:Properties>
                                    </L7p:assertionComment>
                                </wsp:OneOrMore>
                                <wsp:All wsp:Usage="Required">
                                    <wsp:OneOrMore wsp:Usage="Required">
                                    <wsp:All wsp:Usage="Required">
                                    <L7p:ResponseXpathAssertion>
                                    <L7p:VariablePrefix stringValue="apiida.tempXPath"/>
                                    <L7p:XmlMsgSrc stringValue="apiida.tempProfile"/>
                                    <L7p:XpathExpression xpathExpressionValue="included">
                                    <L7p:Expression stringValue="/profile/eventLogFormat"/>
                                    <L7p:Namespaces mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="s"/>
                                    <L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/>
                                    </L7p:entry>
                                    </L7p:Namespaces>
                                    <L7p:XpathVersion xpathVersion="XPATH_2_0"/>
                                    </L7p:XpathExpression>
                                    </L7p:ResponseXpathAssertion>
                                    <L7p:ComparisonAssertion>
                                    <L7p:Expression1 stringValue="${apiida.tempXPath.result}"/>
                                    <L7p:Expression2 stringValue=""/>
                                    <L7p:Negate booleanValue="true"/>
                                    <L7p:Operator operator="EMPTY"/>
                                    <L7p:Predicates predicates="included">
                                    <L7p:item binary="included">
                                    <L7p:Negated booleanValue="true"/>
                                    <L7p:Operator operator="EMPTY"/>
                                    <L7p:RightValue stringValue=""/>
                                    </L7p:item>
                                    </L7p:Predicates>
                                    </L7p:ComparisonAssertion>
                                    <L7p:SetVariable>
                                    <L7p:Base64Expression stringValue="JHthcGlpZGEudGVtcFhQYXRoLnJlc3VsdH0="/>
                                    <L7p:VariableToSet stringValue="apiida.tempString"/>
                                    </L7p:SetVariable>
                                    </wsp:All>
                                    <L7p:SetVariable>
                                    <L7p:Base64Expression stringValue="QVBJSURBIFV0aWwgW1Byb2ZpbGluZ10gLSBQcm9maWxpbmcgZXZlbnQgZmluaXNoZWQuIChFdmVudDokZXZlbnROYW1lLCBFTFQ6JGVsYXBzZWRUaW1lbXMp"/>
                                    <L7p:VariableToSet stringValue="apiida.tempString"/>
                                    </L7p:SetVariable>
                                    </wsp:OneOrMore>
                                    <L7p:Include>
                                    <L7p:PolicyGuid stringValue="4b6cca03-907b-4989-98de-f07ec42c129e"/>
                                    <L7p:PolicyName stringValue="apiida.utils.profiling.include.parseReportingString"/>
                                    </L7p:Include>
                                    <L7p:SetVariable>
                                    <L7p:Base64Expression stringValue="JHthcGlpZGEudGVtcFN0cmluZ30="/>
                                    <L7p:VariableToSet stringValue="apiida.tempEventLogFormat"/>
                                    </L7p:SetVariable>
                                    <L7p:assertionComment>
                                    <L7p:Properties mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="[eventLogFormat (Optional)]"/>
                                    </L7p:entry>
                                    </L7p:Properties>
                                    </L7p:assertionComment>
                                </wsp:All>
                                <wsp:All wsp:Usage="Required">
                                    <wsp:OneOrMore wsp:Usage="Required">
                                    <wsp:All wsp:Usage="Required">
                                    <L7p:ResponseXpathAssertion>
                                    <L7p:VariablePrefix stringValue="apiida.tempXPath"/>
                                    <L7p:XmlMsgSrc stringValue="apiida.tempProfile"/>
                                    <L7p:XpathExpression xpathExpressionValue="included">
                                    <L7p:Expression stringValue="/profile/eventCacheFormat"/>
                                    <L7p:Namespaces mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="s"/>
                                    <L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/>
                                    </L7p:entry>
                                    </L7p:Namespaces>
                                    <L7p:XpathVersion xpathVersion="XPATH_2_0"/>
                                    </L7p:XpathExpression>
                                    </L7p:ResponseXpathAssertion>
                                    <L7p:ComparisonAssertion>
                                    <L7p:Expression1 stringValue="${apiida.tempXPath.result}"/>
                                    <L7p:Expression2 stringValue=""/>
                                    <L7p:Negate booleanValue="true"/>
                                    <L7p:Operator operator="EMPTY"/>
                                    <L7p:Predicates predicates="included">
                                    <L7p:item binary="included">
                                    <L7p:Negated booleanValue="true"/>
                                    <L7p:Operator operator="EMPTY"/>
                                    <L7p:RightValue stringValue=""/>
                                    </L7p:item>
                                    </L7p:Predicates>
                                    </L7p:ComparisonAssertion>
                                    <L7p:SetVariable>
                                    <L7p:Base64Expression stringValue="JHthcGlpZGEudGVtcFhQYXRoLnJlc3VsdH0="/>
                                    <L7p:VariableToSet stringValue="apiida.tempString"/>
                                    </L7p:SetVariable>
                                    </wsp:All>
                                    <L7p:SetVariable>
                                    <L7p:Base64Expression stringValue="eyJTU0ciOiIkc3NnTm9kZSIsInNlcnZpY2UiOiIkc2VydmljZU5hbWUiLCJldmVudCI6IiRldmVudE5hbWUiLCJyZXF1ZXN0VWlkIjoiJHJlcXVlc3RVaWQiLCJlbHQiOiIkZWxhcHNlZFRpbWUifQ=="/>
                                    <L7p:VariableToSet stringValue="apiida.tempString"/>
                                    </L7p:SetVariable>
                                    </wsp:OneOrMore>
                                    <L7p:Include>
                                    <L7p:PolicyGuid stringValue="4b6cca03-907b-4989-98de-f07ec42c129e"/>
                                    <L7p:PolicyName stringValue="apiida.utils.profiling.include.parseReportingString"/>
                                    </L7p:Include>
                                    <L7p:SetVariable>
                                    <L7p:Base64Expression stringValue="JHthcGlpZGEudGVtcFN0cmluZ30="/>
                                    <L7p:VariableToSet stringValue="apiida.tempEventCacheFormat"/>
                                    </L7p:SetVariable>
                                    <L7p:assertionComment>
                                    <L7p:Properties mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="[eventCacheFormat (Optional)]"/>
                                    </L7p:entry>
                                    </L7p:Properties>
                                    </L7p:assertionComment>
                                </wsp:All>
                                <L7p:CommentAssertion>
                                    <L7p:Comment stringValue=" "/>
                                </L7p:CommentAssertion>
                                <L7p:CommentAssertion>
                                    <L7p:Comment stringValue="SWITCH - outputType"/>
                                </L7p:CommentAssertion>
                                <L7p:CommentAssertion>
                                    <L7p:Comment stringValue=" "/>
                                </L7p:CommentAssertion>
                                <wsp:OneOrMore wsp:Usage="Required">
                                    <L7p:ComparisonAssertion>
                                    <L7p:AssertionComment assertionComment="included">
                                    <L7p:Properties mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="[Timespan out of Limits]"/>
                                    </L7p:entry>
                                    </L7p:Properties>
                                    </L7p:AssertionComment>
                                    <L7p:CaseSensitive booleanValue="false"/>
                                    <L7p:Expression1 stringValue="${apiida.var.elapsedTime}"/>
                                    <L7p:Operator operatorNull="null"/>
                                    <L7p:Predicates predicates="included">
                                    <L7p:item dataType="included">
                                    <L7p:Type variableDataType="int"/>
                                    </L7p:item>
                                    <L7p:item binary="included">
                                    <L7p:CaseSensitive booleanValue="false"/>
                                    <L7p:Operator operator="LT"/>
                                    <L7p:RightValue stringValue="${apiida.tempMinimumTime}"/>
                                    </L7p:item>
                                    </L7p:Predicates>
                                    </L7p:ComparisonAssertion>
                                    <wsp:All wsp:Usage="Required">
                                    <L7p:ComparisonAssertion>
                                    <L7p:CaseSensitive booleanValue="false"/>
                                    <L7p:Expression1 stringValue="${apiida.tempOutputType}"/>
                                    <L7p:Expression2 stringValue="log"/>
                                    <L7p:Predicates predicates="included">
                                    <L7p:item binary="included">
                                    <L7p:CaseSensitive booleanValue="false"/>
                                    <L7p:RightValue stringValue="log"/>
                                    </L7p:item>
                                    </L7p:Predicates>
                                    </L7p:ComparisonAssertion>
                                    <L7p:Encapsulated>

                                    <L7p:EncapsulatedAssertionConfigGuid stringValue="30c972a0-7dc1-4048-bd2b-0fa3c77b6c6c"/>

                                    <L7p:EncapsulatedAssertionConfigName stringValue="APIIDA Utility - Logger"/>
                                    <L7p:Parameters mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="apiida.disableScrubber"/>
                                    <L7p:value stringValue="false"/>
                                    </L7p:entry>
                                    <L7p:entry>
                                    <L7p:key stringValue="apiida.logString"/>
                                    <L7p:value stringValue="${apiida.tempEventLogFormat}"/>
                                    </L7p:entry>
                                    <L7p:entry>
                                    <L7p:key stringValue="apiida.logType"/>
                                    <L7p:value stringValue="PROFILING"/>
                                    </L7p:entry>
                                    </L7p:Parameters>
                                    </L7p:Encapsulated>
                                    <L7p:assertionComment>
                                    <L7p:Properties mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="[outputType = LOG]"/>
                                    </L7p:entry>
                                    </L7p:Properties>
                                    </L7p:assertionComment>
                                    </wsp:All>
                                    <wsp:All wsp:Usage="Required">
                                    <L7p:CommentAssertion>
                                    <L7p:Comment stringValue=" "/>
                                    </L7p:CommentAssertion>
                                    <L7p:CommentAssertion>
                                    <L7p:Comment stringValue="Check outputType (and Log if needed)"/>
                                    </L7p:CommentAssertion>
                                    <L7p:CommentAssertion>
                                    <L7p:Comment stringValue=" "/>
                                    </L7p:CommentAssertion>
                                    <wsp:OneOrMore wsp:Usage="Required">
                                    <L7p:ComparisonAssertion>
                                    <L7p:CaseSensitive booleanValue="false"/>
                                    <L7p:Expression1 stringValue="${apiida.tempOutputType}"/>
                                    <L7p:Expression2 stringValue="cache"/>
                                    <L7p:Predicates predicates="included">
                                    <L7p:item binary="included">

                                    <L7p:CaseSensitive booleanValue="false"/>
                                    <L7p:RightValue stringValue="cache"/>
                                    </L7p:item>
                                    </L7p:Predicates>
                                    </L7p:ComparisonAssertion>
                                    <wsp:All wsp:Usage="Required">
                                    <L7p:ComparisonAssertion>
                                    <L7p:CaseSensitive booleanValue="false"/>
                                    <L7p:Expression1 stringValue="${apiida.tempOutputType}"/>
                                    <L7p:Expression2 stringValue="both"/>
                                    <L7p:Predicates predicates="included">
                                    <L7p:item binary="included">

                                    <L7p:CaseSensitive booleanValue="false"/>

                                    <L7p:RightValue stringValue="both"/>
                                    </L7p:item>
                                    </L7p:Predicates>
                                    </L7p:ComparisonAssertion>
                                    <L7p:Encapsulated>

                                    <L7p:EncapsulatedAssertionConfigGuid stringValue="30c972a0-7dc1-4048-bd2b-0fa3c77b6c6c"/>

                                    <L7p:EncapsulatedAssertionConfigName stringValue="APIIDA Utility - Logger"/>
                                    <L7p:Parameters mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="apiida.disableScrubber"/>
                                    <L7p:value stringValue="false"/>
                                    </L7p:entry>
                                    <L7p:entry>
                                    <L7p:key stringValue="apiida.logString"/>
                                    <L7p:value stringValue="${apiida.tempEventLogFormat}"/>
                                    </L7p:entry>
                                    <L7p:entry>
                                    <L7p:key stringValue="apiida.logType"/>
                                    <L7p:value stringValue="PROFILING"/>
                                    </L7p:entry>
                                    </L7p:Parameters>
                                    </L7p:Encapsulated>
                                    </wsp:All>
                                    </wsp:OneOrMore>
                                    <L7p:CommentAssertion>
                                    <L7p:Comment stringValue=" "/>
                                    </L7p:CommentAssertion>
                                    <L7p:CommentAssertion>
                                    <L7p:Comment stringValue="Update Cache with new Event"/>
                                    </L7p:CommentAssertion>
                                    <L7p:CommentAssertion>
                                    <L7p:Comment stringValue=" "/>
                                    </L7p:CommentAssertion>
                                    <wsp:OneOrMore wsp:Usage="Required">
                                    <wsp:All wsp:Usage="Required">
                                    <wsp:OneOrMore wsp:Usage="Required">
                                    <L7p:Encapsulated>

                                    <L7p:EncapsulatedAssertionConfigGuid stringValue="590ca436-8955-4ce1-a2ff-e1721279d816"/>

                                    <L7p:EncapsulatedAssertionConfigName stringValue="APIIDA Utility - Load Cache"/>
                                    <L7p:Parameters mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="apiida.id"/>

                                    <L7p:value stringValue="apiida-utils-profilingEventCache"/>
                                    </L7p:entry>
                                    <L7p:entry>
                                    <L7p:key stringValue="apiida.key"/>

                                    <L7p:value stringValue="apiida"/>
                                    </L7p:entry>
                                    <L7p:entry>
                                    <L7p:key stringValue="apiida.timeout"/>

                                    <L7p:value stringValue="${apiida.tempCacheTimeout}"/>
                                    </L7p:entry>
                                    </L7p:Parameters>
                                    </L7p:Encapsulated>
                                    <L7p:TrueAssertion/>
                                    <L7p:assertionComment>
                                    <L7p:Properties mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>

                                    <L7p:value stringValue="[Try to load previous cache]"/>
                                    </L7p:entry>
                                    </L7p:Properties>
                                    </L7p:assertionComment>
                                    </wsp:OneOrMore>
                                    <wsp:OneOrMore wsp:Usage="Required">
                                    <wsp:All wsp:Usage="Required">
                                    <L7p:ComparisonAssertion>

                                    <L7p:CaseSensitive booleanValue="false"/>

                                    <L7p:Expression1 stringValue="${apiida.var.cachePayload.mainpart}"/>

                                    <L7p:Expression2 stringValue="cache"/>

                                    <L7p:Operator operator="EMPTY"/>

                                    <L7p:Predicates predicates="included">

                                    <L7p:item binary="included">

                                    <L7p:CaseSensitive booleanValue="false"/>

                                    <L7p:Operator operator="EMPTY"/>

                                    <L7p:RightValue stringValue="cache"/>
                                    </L7p:item>
                                    </L7p:Predicates>
                                    </L7p:ComparisonAssertion>
                                    <L7p:SetVariable>

                                    <L7p:Base64Expression stringValue="JHthcGlpZGEudGVtcEV2ZW50Q2FjaGVGb3JtYXR9"/>

                                    <L7p:ContentType stringValue="application/json; charset=utf-8"/>

                                    <L7p:DataType variableDataType="message"/>

                                    <L7p:VariableToSet stringValue="apiida.var.cachePayload"/>
                                    </L7p:SetVariable>
                                    </wsp:All>
                                    <L7p:SetVariable>

                                    <L7p:Base64Expression stringValue="JHthcGlpZGEudmFyLmNhY2hlUGF5bG9hZC5tYWlucGFydH0sJHthcGlpZGEudGVtcEV2ZW50Q2FjaGVGb3JtYXR9"/>
                                    <L7p:ContentType stringValue="application/json; charset=utf-8"/>
                                    <L7p:DataType variableDataType="message"/>

                                    <L7p:VariableToSet stringValue="apiida.var.cachePayload"/>
                                    </L7p:SetVariable>
                                    </wsp:OneOrMore>
                                    <L7p:Encapsulated>

                                    <L7p:EncapsulatedAssertionConfigGuid stringValue="2fac74fc-4e2b-47ad-84cc-7dc34a30784e"/>

                                    <L7p:EncapsulatedAssertionConfigName stringValue="APIIDA Utility - Store Cache"/>
                                    <L7p:Parameters mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="apiida.expires"/>
                                    <L7p:value stringValue="false"/>
                                    </L7p:entry>
                                    <L7p:entry>
                                    <L7p:key stringValue="apiida.id"/>
                                    <L7p:value stringValue="apiida-utils-profilingEventCache"/>
                                    </L7p:entry>
                                    <L7p:entry>
                                    <L7p:key stringValue="apiida.key"/>
                                    <L7p:value stringValue="apiida"/>
                                    </L7p:entry>
                                    <L7p:entry>
                                    <L7p:key stringValue="apiida.maxSize"/>
                                    <L7p:value stringValue="${apiida.tempCacheMaxSize}"/>
                                    </L7p:entry>
                                    <L7p:entry>
                                    <L7p:key stringValue="apiida.payload"/>
                                    <L7p:value stringValue="apiida.var.cachePayload"/>
                                    </L7p:entry>
                                    <L7p:entry>
                                    <L7p:key stringValue="apiida.timeout"/>
                                    <L7p:value stringValue="${apiida.tempCacheTimeout}"/>
                                    </L7p:entry>
                                    </L7p:Parameters>
                                    </L7p:Encapsulated>
                                    </wsp:All>
                                    <L7p:TrueAssertion>
                                    <L7p:AssertionComment assertionComment="included">
                                    <L7p:Properties mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="[Ensure continuation on failures]"/>
                                    </L7p:entry>
                                    </L7p:Properties>
                                    </L7p:AssertionComment>
                                    </L7p:TrueAssertion>
                                    </wsp:OneOrMore>
                                    <L7p:assertionComment>
                                    <L7p:Properties mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="[outputType = CACHE|BOTH]"/>
                                    </L7p:entry>
                                    </L7p:Properties>
                                    </L7p:assertionComment>
                                    </wsp:All>
                                    <wsp:All wsp:Usage="Required">
                                    <L7p:SetVariable>
                                    <L7p:Base64Expression stringValue="dHJ1ZQ=="/>
                                    <L7p:VariableToSet stringValue="service.apiida.utils.profiling.error"/>
                                    </L7p:SetVariable>
                                    <L7p:Encapsulated>

                                    <L7p:EncapsulatedAssertionConfigGuid stringValue="49dd455c-1208-43ce-becc-95884947d92f"/>

                                    <L7p:EncapsulatedAssertionConfigName stringValue="APIIDA Utility - Log Internal String"/>
                                    <L7p:Parameters mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="apiida.code"/>
                                    <L7p:value stringValue="025"/>
                                    </L7p:entry>
                                    <L7p:entry>
                                    <L7p:key stringValue="apiida.postString"/>
                                    <L7p:value stringValue="${apiida.tempOutputType}"/>
                                    </L7p:entry>
                                    <L7p:entry>
                                    <L7p:key stringValue="apiida.preString"/>
                                    <L7p:value stringValue=""/>
                                    </L7p:entry>
                                    </L7p:Parameters>
                                    </L7p:Encapsulated>
                                    <L7p:assertionComment>
                                    <L7p:Properties mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="[ERROR (code 025) - Invalid outputType]"/>
                                    </L7p:entry>
                                    </L7p:Properties>
                                    </L7p:assertionComment>
                                    </wsp:All>
                                </wsp:OneOrMore>
                                <L7p:assertionComment>
                                    <L7p:Properties mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="[Else handle other outputTypes]"/>
                                    </L7p:entry>
                                    </L7p:Properties>
                                </L7p:assertionComment>
                            </wsp:All>
                        </wsp:OneOrMore>
                    </wsp:All>
                    <wsp:All wsp:Usage="Required">
                        <L7p:SetVariable>
                            <L7p:Base64Expression stringValue="dHJ1ZQ=="/>
                            <L7p:VariableToSet stringValue="service.apiida.utils.profiling.error"/>
                        </L7p:SetVariable>
                        <L7p:Encapsulated>
                            <L7p:EncapsulatedAssertionConfigGuid stringValue="49dd455c-1208-43ce-becc-95884947d92f"/>
                            <L7p:EncapsulatedAssertionConfigName stringValue="APIIDA Utility - Log Internal String"/>
                            <L7p:Parameters mapValue="included">
                                <L7p:entry>
                                    <L7p:key stringValue="apiida.code"/>
                                    <L7p:value stringValue="027"/>
                                </L7p:entry>
                                <L7p:entry>
                                    <L7p:key stringValue="apiida.postString"/>
                                    <L7p:value stringValue=" ${apiida.id}"/>
                                </L7p:entry>
                                <L7p:entry>
                                    <L7p:key stringValue="apiida.preString"/>
                                    <L7p:value stringValue=""/>
                                </L7p:entry>
                            </L7p:Parameters>
                        </L7p:Encapsulated>
                        <L7p:assertionComment>
                            <L7p:Properties mapValue="included">
                                <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="[WARNING (code 027) - Invalid Profile]"/>
                                </L7p:entry>
                            </L7p:Properties>
                        </L7p:assertionComment>
                    </wsp:All>
                    <L7p:assertionComment>
                        <L7p:Properties mapValue="included">
                            <L7p:entry>
                                <L7p:key stringValue="RIGHT.COMMENT"/>
                                <L7p:value stringValue="[Extract Profile Data]"/>
                            </L7p:entry>
                        </L7p:Properties>
                    </L7p:assertionComment>
                </wsp:OneOrMore>
            </wsp:All>
            <L7p:TrueAssertion>
                <L7p:AssertionComment assertionComment="included">
                    <L7p:Properties mapValue="included">
                        <L7p:entry>
                            <L7p:key stringValue="RIGHT.COMMENT"/>
                            <L7p:value stringValue="[Ensure continuation on failures]"/>
                        </L7p:entry>
                    </L7p:Properties>
                </L7p:AssertionComment>
            </L7p:TrueAssertion>
        </wsp:OneOrMore>
    </wsp:All>
</wsp:Policy>
