<?xml version="1.0" encoding="UTF-8"?>
<wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy">
    <wsp:All wsp:Usage="Required">
        <L7p:CommentAssertion>
            <L7p:Comment stringValue="================================================================"/>
        </L7p:CommentAssertion>
        <L7p:CommentAssertion>
            <L7p:Comment stringValue="APIIDA Utility - logger"/>
        </L7p:CommentAssertion>
        <L7p:CommentAssertion>
            <L7p:Comment stringValue="Utility to log a string."/>
        </L7p:CommentAssertion>
        <L7p:CommentAssertion>
            <L7p:Comment stringValue="-------------------------------------------------------------------------------------------"/>
        </L7p:CommentAssertion>
        <L7p:CommentAssertion>
            <L7p:Comment stringValue="INPUT:"/>
        </L7p:CommentAssertion>
        <L7p:CommentAssertion>
            <L7p:Comment stringValue="apiida.logString (String) - String to Log"/>
        </L7p:CommentAssertion>
        <L7p:CommentAssertion>
            <L7p:Comment stringValue="apiida.logType (String) - (Optional) Log type for this String"/>
        </L7p:CommentAssertion>
        <L7p:CommentAssertion>
            <L7p:Comment stringValue="apiida.disableScrubber (Boolean) - Should data scrubber be used if rules present"/>
        </L7p:CommentAssertion>
        <L7p:CommentAssertion>
            <L7p:Comment stringValue="-------------------------------------------------------------------------------------------"/>
        </L7p:CommentAssertion>
        <L7p:CommentAssertion>
            <L7p:Comment stringValue="NOTES:"/>
        </L7p:CommentAssertion>
        <L7p:CommentAssertion>
            <L7p:Comment stringValue="- Uses CWP: apiida.utils.loggingConfiguration"/>
        </L7p:CommentAssertion>
        <L7p:CommentAssertion>
            <L7p:Comment stringValue="- Uses CWP: apiida.utils.currentLoggerProfile"/>
        </L7p:CommentAssertion>
        <L7p:CommentAssertion>
            <L7p:Comment stringValue="================================================================"/>
        </L7p:CommentAssertion>
        <L7p:CommentAssertion>
            <L7p:Comment stringValue=" "/>
        </L7p:CommentAssertion>
        <L7p:CommentAssertion>
            <L7p:Comment stringValue="------------------------------------------------------------------------"/>
        </L7p:CommentAssertion>
        <L7p:CommentAssertion>
            <L7p:Comment stringValue="Set Log Pre-Text Format - Change to clients required standard"/>
        </L7p:CommentAssertion>
        <L7p:CommentAssertion>
            <L7p:Comment stringValue="------------------------------------------------------------------------"/>
        </L7p:CommentAssertion>
        <L7p:SetVariable>
            <L7p:Base64Expression stringValue="JHtzc2dub2RlLm5hbWV9LCAke3NlcnZpY2UubmFtZX0sIEVMVDoke3JlcXVlc3QuZWxhcHNlZFRpbWV9bXMsIElEOiR7cmVxdWVzdElkfSw="/>
            <L7p:VariableToSet stringValue="apiida.logPreString"/>
        </L7p:SetVariable>
        <L7p:CommentAssertion>
            <L7p:Comment stringValue=" "/>
        </L7p:CommentAssertion>
        <L7p:CommentAssertion>
            <L7p:Comment stringValue="------------------------------------------------------------------------"/>
        </L7p:CommentAssertion>
        <L7p:CommentAssertion>
            <L7p:Comment stringValue="Initialize Logging Configuration"/>
        </L7p:CommentAssertion>
        <L7p:CommentAssertion>
            <L7p:Comment stringValue="------------------------------------------------------------------------"/>
        </L7p:CommentAssertion>
        <wsp:OneOrMore wsp:Usage="Required">
            <L7p:ComparisonAssertion>
                <L7p:AssertionComment assertionComment="included">
                    <L7p:Properties mapValue="included">
                        <L7p:entry>
                            <L7p:key stringValue="RIGHT.COMMENT"/>
                            <L7p:value stringValue="[Logging Logic Already Initialized or unavailable]"/>
                        </L7p:entry>
                    </L7p:Properties>
                </L7p:AssertionComment>
                <L7p:CaseSensitive booleanValue="false"/>
                <L7p:Expression1 stringValue="${service.apiida.utils.logging.loaded}"/>
                <L7p:Expression2 stringValue="true"/>
                <L7p:Predicates predicates="included">
                    <L7p:item binary="included">
                        <L7p:CaseSensitive booleanValue="false"/>
                        <L7p:RightValue stringValue="true"/>
                    </L7p:item>
                </L7p:Predicates>
            </L7p:ComparisonAssertion>
            <wsp:All wsp:Usage="Required">
                <L7p:CommentAssertion>
                    <L7p:Comment stringValue=" "/>
                </L7p:CommentAssertion>
                <L7p:CommentAssertion>
                    <L7p:Comment stringValue="Setup Global ($service) Variables"/>
                </L7p:CommentAssertion>
                <L7p:CommentAssertion>
                    <L7p:Comment stringValue=" "/>
                </L7p:CommentAssertion>
                <L7p:SetVariable>
                    <L7p:Base64Expression stringValue=""/>
                    <L7p:VariableToSet stringValue="service.apiida.utils.logging.elements"/>
                </L7p:SetVariable>
                <L7p:SetVariable>
                    <L7p:Base64Expression stringValue=""/>
                    <L7p:ContentType stringValue="text/xml; charset=utf-8"/>
                    <L7p:DataType variableDataType="message"/>
                    <L7p:VariableToSet stringValue="service.apiida.utils.logging.scrubberRules"/>
                </L7p:SetVariable>
                <L7p:SetVariable>
                    <L7p:AssertionComment assertionComment="included">
                        <L7p:Properties mapValue="included">
                            <L7p:entry>
                                <L7p:key stringValue="RIGHT.COMMENT"/>
                                <L7p:value stringValue="[Preset to TRUE to ensure logging continues if errors occur]"/>
                            </L7p:entry>
                        </L7p:Properties>
                    </L7p:AssertionComment>
                    <L7p:Base64Expression stringValue="dHJ1ZQ=="/>
                    <L7p:VariableToSet stringValue="service.apiida.utils.logging.loaded"/>
                </L7p:SetVariable>
                <L7p:CommentAssertion>
                    <L7p:Comment stringValue=" "/>
                </L7p:CommentAssertion>
                <L7p:CommentAssertion>
                    <L7p:Comment stringValue="Load Logging Configuration CWP"/>
                </L7p:CommentAssertion>
                <L7p:CommentAssertion>
                    <L7p:Comment stringValue=" "/>
                </L7p:CommentAssertion>
                <wsp:OneOrMore wsp:Usage="Required">
                    <wsp:All wsp:Usage="Required">
                        <L7p:Encapsulated>
                            <L7p:EncapsulatedAssertionConfigGuid stringValue="590ca436-8955-4ce1-a2ff-e1721279d816"/>
                            <L7p:EncapsulatedAssertionConfigName stringValue="APIIDA Utility - Load Cache"/>
                            <L7p:Parameters mapValue="included">
                                <L7p:entry>
                                    <L7p:key stringValue="apiida.id"/>
                                    <L7p:value stringValue="apiida-utils-loggingConfiguration"/>
                                </L7p:entry>
                                <L7p:entry>
                                    <L7p:key stringValue="apiida.key"/>
                                    <L7p:value stringValue="apiida"/>
                                </L7p:entry>
                                <L7p:entry>
                                    <L7p:key stringValue="apiida.timeout"/>
                                    <L7p:value stringValue="${gateway.apiida.utils.maxCacheAge}"/>
                                </L7p:entry>
                            </L7p:Parameters>
                        </L7p:Encapsulated>
                        <L7p:SetVariable>
                            <L7p:Base64Expression stringValue="JHthcGlpZGEudmFyLmNhY2hlUGF5bG9hZC5tYWlucGFydH0="/>
                            <L7p:ContentType stringValue="application/xml; charset=utf-8"/>
                            <L7p:DataType variableDataType="message"/>
                            <L7p:VariableToSet stringValue="apiida.tempMessage"/>
                        </L7p:SetVariable>
                        <L7p:SetVariable>
                            <L7p:Base64Expression stringValue="Y2FjaGU="/>
                            <L7p:VariableToSet stringValue="apiida.tempSource"/>
                        </L7p:SetVariable>
                        <L7p:assertionComment>
                            <L7p:Properties mapValue="included">
                                <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="[Load from Cache]"/>
                                </L7p:entry>
                            </L7p:Properties>
                        </L7p:assertionComment>
                    </wsp:All>
                    <wsp:All wsp:Usage="Required">
                        <L7p:SetVariable>
                            <L7p:Base64Expression stringValue="JHtnYXRld2F5LmFwaWlkYS51dGlscy5sb2dnZXJDb25maWd1cmF0aW9ufQ=="/>
                            <L7p:ContentType stringValue="application/xml; charset=utf-8"/>
                            <L7p:DataType variableDataType="message"/>
                            <L7p:VariableToSet stringValue="apiida.tempMessage"/>
                        </L7p:SetVariable>
                        <L7p:ComparisonAssertion>
                            <L7p:Expression1 stringValue="${apiida.tempMessage.mainpart}"/>
                            <L7p:Expression2 stringValue=""/>
                            <L7p:Negate booleanValue="true"/>
                            <L7p:Operator operator="EMPTY"/>
                            <L7p:Predicates predicates="included">
                                <L7p:item binary="included">
                                    <L7p:Negated booleanValue="true"/>
                                    <L7p:Operator operator="EMPTY"/>
                                    <L7p:RightValue stringValue=""/>
                                </L7p:item>
                            </L7p:Predicates>
                        </L7p:ComparisonAssertion>
                        <L7p:Regex>
                            <L7p:AssertionComment assertionComment="included">
                                <L7p:Properties mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="[Strip Comments]"/>
                                    </L7p:entry>
                                </L7p:Properties>
                            </L7p:AssertionComment>
                            <L7p:AutoTarget booleanValue="false"/>
                            <L7p:OtherTargetMessageVariable stringValue="apiida.tempMessage"/>
                            <L7p:Regex stringValue="\s*\&lt;\!\-\-((?!\-\-\>)[\s\S])*\-\-\>\s*"/>
                            <L7p:Replace booleanValue="true"/>
                            <L7p:Replacement stringValue=""/>
                            <L7p:Target target="OTHER"/>
                        </L7p:Regex>
                        <L7p:SetVariable>
                            <L7p:Base64Expression stringValue="Q1dQ"/>
                            <L7p:VariableToSet stringValue="apiida.tempSource"/>
                        </L7p:SetVariable>
                        <L7p:assertionComment>
                            <L7p:Properties mapValue="included">
                                <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="[Load from CWP]"/>
                                </L7p:entry>
                            </L7p:Properties>
                        </L7p:assertionComment>
                    </wsp:All>
                    <wsp:All wsp:Usage="Required">
                        <L7p:AuditDetailAssertion>
                            <L7p:Detail stringValue="${apiida.logPreString} [WARNING] APIIDA Util [Logger] - Configuration CWP not found. Continuing with no configuration."/>
                            <L7p:Level stringValue="WARNING"/>
                            <L7p:LoggingOnly booleanValue="true"/>
                        </L7p:AuditDetailAssertion>
                        <L7p:FalseAssertion/>
                        <L7p:assertionComment>
                            <L7p:Properties mapValue="included">
                                <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="[ERROR - No Configuration Found]"/>
                                </L7p:entry>
                            </L7p:Properties>
                        </L7p:assertionComment>
                    </wsp:All>
                </wsp:OneOrMore>
                <L7p:CommentAssertion>
                    <L7p:Comment stringValue=" "/>
                </L7p:CommentAssertion>
                <L7p:CommentAssertion>
                    <L7p:Comment stringValue="Extract Information from Logger Configuration"/>
                </L7p:CommentAssertion>
                <L7p:CommentAssertion>
                    <L7p:Comment stringValue=" "/>
                </L7p:CommentAssertion>
                <wsp:OneOrMore wsp:Usage="Required">
                    <wsp:All wsp:Usage="Required">
                        <L7p:ResponseXpathAssertion>
                            <L7p:AssertionComment assertionComment="included">
                                <L7p:Properties mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="[Test XML Valid]"/>
                                    </L7p:entry>
                                </L7p:Properties>
                            </L7p:AssertionComment>
                            <L7p:VariablePrefix stringValue="apiida.tempXPath"/>
                            <L7p:XmlMsgSrc stringValue="apiida.tempMessage"/>
                            <L7p:XpathExpression xpathExpressionValue="included">
                                <L7p:Expression stringValue="/loggingConfiguration"/>
                                <L7p:Namespaces mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="s"/>
                                    <L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/>
                                    </L7p:entry>
                                </L7p:Namespaces>
                                <L7p:XpathVersion xpathVersion="XPATH_1_0"/>
                            </L7p:XpathExpression>
                        </L7p:ResponseXpathAssertion>
                        <L7p:CommentAssertion>
                            <L7p:Comment stringValue=" "/>
                        </L7p:CommentAssertion>
                        <L7p:CommentAssertion>
                            <L7p:Comment stringValue="Extract General Options"/>
                        </L7p:CommentAssertion>
                        <L7p:CommentAssertion>
                            <L7p:Comment stringValue=" "/>
                        </L7p:CommentAssertion>
                        <wsp:OneOrMore wsp:Usage="Required">
                            <wsp:All wsp:Usage="Required">
                                <L7p:ResponseXpathAssertion>
                                    <L7p:VariablePrefix stringValue="apiida.tempXPath"/>
                                    <L7p:XmlMsgSrc stringValue="apiida.tempMessage"/>
                                    <L7p:XpathExpression xpathExpressionValue="included">
                                    <L7p:Expression stringValue="/loggingConfiguration/configCacheTime"/>
                                    <L7p:Namespaces mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="s"/>
                                    <L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/>
                                    </L7p:entry>
                                    </L7p:Namespaces>
                                    <L7p:XpathVersion xpathVersion="XPATH_1_0"/>
                                    </L7p:XpathExpression>
                                </L7p:ResponseXpathAssertion>
                                <L7p:ComparisonAssertion>
                                    <L7p:Expression1 stringValue="${apiida.tempXPath.result}"/>
                                    <L7p:Expression2 stringValue=""/>
                                    <L7p:Negate booleanValue="true"/>
                                    <L7p:Operator operator="EMPTY"/>
                                    <L7p:Predicates predicates="included">
                                    <L7p:item binary="included">
                                    <L7p:Negated booleanValue="true"/>
                                    <L7p:Operator operator="EMPTY"/>
                                    <L7p:RightValue stringValue=""/>
                                    </L7p:item>
                                    </L7p:Predicates>
                                </L7p:ComparisonAssertion>
                                <L7p:SetVariable>
                                    <L7p:Base64Expression stringValue="JHthcGlpZGEudGVtcFhQYXRoLnJlc3VsdH0="/>
                                    <L7p:VariableToSet stringValue="apiida.tempCacheTimeout"/>
                                </L7p:SetVariable>
                            </wsp:All>
                            <L7p:SetVariable>
                                <L7p:Base64Expression stringValue="JHtnYXRld2F5LmFwaWlkYS51dGlscy5tYXhDYWNoZUFnZX0="/>
                                <L7p:VariableToSet stringValue="apiida.tempCacheTimeout"/>
                            </L7p:SetVariable>
                            <L7p:assertionComment>
                                <L7p:Properties mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="[Configuration Cache Timeout (Optional)]"/>
                                    </L7p:entry>
                                </L7p:Properties>
                            </L7p:assertionComment>
                        </wsp:OneOrMore>
                        <L7p:CommentAssertion>
                            <L7p:Comment stringValue=" "/>
                        </L7p:CommentAssertion>
                        <L7p:CommentAssertion>
                            <L7p:Comment stringValue="Extract Logging Profiles"/>
                        </L7p:CommentAssertion>
                        <L7p:CommentAssertion>
                            <L7p:Comment stringValue=" "/>
                        </L7p:CommentAssertion>
                        <wsp:OneOrMore wsp:Usage="Required">
                            <wsp:All wsp:Usage="Required">
                                <L7p:ResponseXpathAssertion>
                                    <L7p:VariablePrefix stringValue="apiida.tempXPath"/>
                                    <L7p:XmlMsgSrc stringValue="apiida.tempMessage"/>
                                    <L7p:XpathExpression xpathExpressionValue="included">
                                    <L7p:Expression stringValue="/loggingConfiguration/profiles"/>
                                    <L7p:Namespaces mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="s"/>
                                    <L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/>
                                    </L7p:entry>
                                    </L7p:Namespaces>
                                    <L7p:XpathVersion xpathVersion="XPATH_1_0"/>
                                    </L7p:XpathExpression>
                                </L7p:ResponseXpathAssertion>
                                <L7p:SetVariable>
                                    <L7p:Base64Expression stringValue="JHthcGlpZGEudGVtcFhQYXRoLmVsZW1lbnR9"/>
                                    <L7p:ContentType stringValue="application/xml; charset=utf-8"/>
                                    <L7p:DataType variableDataType="message"/>
                                    <L7p:VariableToSet stringValue="apiida.tempProfiles"/>
                                </L7p:SetVariable>
                                <L7p:SetVariable>
                                    <L7p:Base64Expression stringValue="JHtnYXRld2F5LmFwaWlkYS51dGlscy5jdXJyZW50TG9nZ2VyUHJvZmlsZX0="/>
                                    <L7p:VariableToSet stringValue="apiida.tempProfileName"/>
                                </L7p:SetVariable>
                                <L7p:SetVariable>
                                    <L7p:Base64Expression stringValue=""/>
                                    <L7p:ContentType stringValue="text/xml; charset=utf-8"/>
                                    <L7p:DataType variableDataType="message"/>
                                    <L7p:VariableToSet stringValue="apiida.tempProfile"/>
                                </L7p:SetVariable>
                                <wsp:OneOrMore wsp:Usage="Required">
                                    <wsp:All wsp:Usage="Required">
                                    <L7p:ComparisonAssertion>
                                    <L7p:CaseSensitive booleanValue="false"/>
                                    <L7p:Expression1 stringValue="${apiida.tempProfileName}"/>
                                    <L7p:Expression2 stringValue="true"/>
                                    <L7p:Negate booleanValue="true"/>
                                    <L7p:Operator operator="EMPTY"/>
                                    <L7p:Predicates predicates="included">
                                    <L7p:item binary="included">
                                    <L7p:CaseSensitive booleanValue="false"/>
                                    <L7p:Negated booleanValue="true"/>
                                    <L7p:Operator operator="EMPTY"/>
                                    <L7p:RightValue stringValue="true"/>
                                    </L7p:item>
                                    </L7p:Predicates>
                                    </L7p:ComparisonAssertion>
                                    <wsp:OneOrMore wsp:Usage="Required">
                                    <wsp:All wsp:Usage="Required">
                                    <L7p:ResponseXpathAssertion>
                                    <L7p:VariablePrefix stringValue="apiida.tempXPath"/>
                                    <L7p:XmlMsgSrc stringValue="apiida.tempProfiles"/>
                                    <L7p:XpathExpression xpathExpressionValue="included">
                                    <L7p:Expression stringValue="/profiles/profile[@id=$apiida.tempProfileName]"/>
                                    <L7p:Namespaces mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="s"/>

                                    <L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/>
                                    </L7p:entry>
                                    </L7p:Namespaces>

                                    <L7p:XpathVersion xpathVersion="XPATH_1_0"/>
                                    </L7p:XpathExpression>
                                    </L7p:ResponseXpathAssertion>
                                    <L7p:SetVariable>

                                    <L7p:Base64Expression stringValue="JHthcGlpZGEudGVtcFhQYXRoLmVsZW1lbnR9"/>
                                    <L7p:ContentType stringValue="text/xml; charset=utf-8"/>
                                    <L7p:DataType variableDataType="message"/>
                                    <L7p:VariableToSet stringValue="apiida.tempProfile"/>
                                    </L7p:SetVariable>
                                    </wsp:All>
                                    <wsp:All wsp:Usage="Required">
                                    <L7p:AuditDetailAssertion>
                                    <L7p:Detail stringValue="${apiida.logPreString} [WARNING] APIIDA Util [Logger] - Profile not found, trying Default."/>
                                    <L7p:Level stringValue="WARNING"/>
                                    <L7p:LoggingOnly booleanValue="true"/>
                                    </L7p:AuditDetailAssertion>
                                    <L7p:FalseAssertion/>
                                    <L7p:assertionComment>
                                    <L7p:Properties mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="[ERROR - Given Profile not found]"/>
                                    </L7p:entry>
                                    </L7p:Properties>
                                    </L7p:assertionComment>
                                    </wsp:All>
                                    </wsp:OneOrMore>
                                    </wsp:All>
                                    <wsp:All wsp:Usage="Required">
                                    <L7p:SetVariable>
                                    <L7p:Base64Expression stringValue="ZGVmYXVsdA=="/>
                                    <L7p:VariableToSet stringValue="apiida.tempProfileName"/>
                                    </L7p:SetVariable>
                                    <L7p:ResponseXpathAssertion>
                                    <L7p:VariablePrefix stringValue="apiida.tempXPath"/>
                                    <L7p:XmlMsgSrc stringValue="apiida.tempProfiles"/>
                                    <L7p:XpathExpression xpathExpressionValue="included">
                                    <L7p:Expression stringValue="/profiles/profile[@id=$apiida.tempProfileName]"/>
                                    <L7p:Namespaces mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="s"/>
                                    <L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/>
                                    </L7p:entry>
                                    </L7p:Namespaces>
                                    <L7p:XpathVersion xpathVersion="XPATH_1_0"/>
                                    </L7p:XpathExpression>
                                    </L7p:ResponseXpathAssertion>
                                    <L7p:SetVariable>
                                    <L7p:Base64Expression stringValue="JHthcGlpZGEudGVtcFhQYXRoLmVsZW1lbnR9"/>
                                    <L7p:ContentType stringValue="text/xml; charset=utf-8"/>
                                    <L7p:DataType variableDataType="message"/>
                                    <L7p:VariableToSet stringValue="apiida.tempProfile"/>
                                    </L7p:SetVariable>
                                    </wsp:All>
                                    <L7p:AuditDetailAssertion>
                                    <L7p:Detail stringValue="${apiida.logPreString} [WARNING] APIIDA Util [Logger] - Default profile not found."/>
                                    <L7p:Level stringValue="WARNING"/>
                                    <L7p:LoggingOnly booleanValue="true"/>
                                    </L7p:AuditDetailAssertion>
                                </wsp:OneOrMore>
                                <wsp:OneOrMore wsp:Usage="Required">
                                    <L7p:ComparisonAssertion>
                                    <L7p:CaseSensitive booleanValue="false"/>
                                    <L7p:Expression1 stringValue="${apiida.tempProfile.mainpart}"/>
                                    <L7p:Expression2 stringValue="true"/>
                                    <L7p:Operator operator="EMPTY"/>
                                    <L7p:Predicates predicates="included">
                                    <L7p:item binary="included">
                                    <L7p:CaseSensitive booleanValue="false"/>
                                    <L7p:Operator operator="EMPTY"/>
                                    <L7p:RightValue stringValue="true"/>
                                    </L7p:item>
                                    </L7p:Predicates>
                                    </L7p:ComparisonAssertion>
                                    <wsp:All wsp:Usage="Required">
                                    <wsp:OneOrMore wsp:Usage="Required">
                                    <wsp:All wsp:Usage="Required">
                                    <L7p:ResponseXpathAssertion>
                                    <L7p:VariablePrefix stringValue="apiida.tempXPath"/>
                                    <L7p:XmlMsgSrc stringValue="apiida.tempProfile"/>
                                    <L7p:XpathExpression xpathExpressionValue="included">
                                    <L7p:Expression stringValue="/profile/logElements"/>
                                    <L7p:Namespaces mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="s"/>

                                    <L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/>
                                    </L7p:entry>
                                    </L7p:Namespaces>

                                    <L7p:XpathVersion xpathVersion="XPATH_1_0"/>
                                    </L7p:XpathExpression>
                                    </L7p:ResponseXpathAssertion>
                                    <L7p:ComparisonAssertion>
                                    <L7p:Expression1 stringValue="${apiida.tempXPath.result}"/>
                                    <L7p:Expression2 stringValue=""/>
                                    <L7p:Negate booleanValue="true"/>
                                    <L7p:Operator operator="EMPTY"/>
                                    <L7p:Predicates predicates="included">
                                    <L7p:item binary="included">
                                    <L7p:Negated booleanValue="true"/>

                                    <L7p:Operator operator="EMPTY"/>

                                    <L7p:RightValue stringValue=""/>
                                    </L7p:item>
                                    </L7p:Predicates>
                                    </L7p:ComparisonAssertion>
                                    <L7p:SetVariable>

                                    <L7p:Base64Expression stringValue="JHthcGlpZGEudGVtcFhQYXRoLnJlc3VsdH0="/>
                                    <L7p:VariableToSet stringValue="service.apiida.utils.logging.elements"/>
                                    </L7p:SetVariable>
                                    </wsp:All>
                                    <L7p:TrueAssertion/>
                                    <L7p:assertionComment>
                                    <L7p:Properties mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="[Optional] Log Elements"/>
                                    </L7p:entry>
                                    </L7p:Properties>
                                    </L7p:assertionComment>
                                    </wsp:OneOrMore>
                                    <wsp:OneOrMore wsp:Usage="Required">
                                    <wsp:All wsp:Usage="Required">
                                    <L7p:ResponseXpathAssertion>
                                    <L7p:VariablePrefix stringValue="apiida.tempXPath"/>
                                    <L7p:XmlMsgSrc stringValue="apiida.tempProfile"/>
                                    <L7p:XpathExpression xpathExpressionValue="included">
                                    <L7p:Expression stringValue="/profile/scrubberRules"/>
                                    <L7p:Namespaces mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="s"/>

                                    <L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/>
                                    </L7p:entry>
                                    </L7p:Namespaces>

                                    <L7p:XpathVersion xpathVersion="XPATH_1_0"/>
                                    </L7p:XpathExpression>
                                    </L7p:ResponseXpathAssertion>
                                    <L7p:ComparisonAssertion>
                                    <L7p:Expression1 stringValue="${apiida.tempXPath.element}"/>
                                    <L7p:Expression2 stringValue=""/>
                                    <L7p:Negate booleanValue="true"/>
                                    <L7p:Operator operator="EMPTY"/>
                                    <L7p:Predicates predicates="included">
                                    <L7p:item binary="included">
                                    <L7p:Negated booleanValue="true"/>

                                    <L7p:Operator operator="EMPTY"/>

                                    <L7p:RightValue stringValue=""/>
                                    </L7p:item>
                                    </L7p:Predicates>
                                    </L7p:ComparisonAssertion>
                                    <L7p:SetVariable>

                                    <L7p:Base64Expression stringValue="JHthcGlpZGEudGVtcFhQYXRoLmVsZW1lbnR9"/>
                                    <L7p:ContentType stringValue="text/xml; charset=utf-8"/>
                                    <L7p:DataType variableDataType="message"/>
                                    <L7p:VariableToSet stringValue="service.apiida.utils.logging.scrubberRules"/>
                                    </L7p:SetVariable>
                                    </wsp:All>
                                    <L7p:TrueAssertion/>
                                    <L7p:assertionComment>
                                    <L7p:Properties mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="[Optional] Scrubber Rules]"/>
                                    </L7p:entry>
                                    </L7p:Properties>
                                    </L7p:assertionComment>
                                    </wsp:OneOrMore>
                                    </wsp:All>
                                </wsp:OneOrMore>
                            </wsp:All>
                            <L7p:AuditDetailAssertion>
                                <L7p:Detail stringValue="${apiida.logPreString} [WARNING] APIIDA Util [Logger] - No profiles defined in configuration. Continuing with no configuration."/>
                                <L7p:Level stringValue="WARNING"/>
                                <L7p:LoggingOnly booleanValue="true"/>
                            </L7p:AuditDetailAssertion>
                        </wsp:OneOrMore>
                        <L7p:CommentAssertion>
                            <L7p:Comment stringValue=" "/>
                        </L7p:CommentAssertion>
                        <L7p:CommentAssertion>
                            <L7p:Comment stringValue="Store to Cache"/>
                        </L7p:CommentAssertion>
                        <L7p:CommentAssertion>
                            <L7p:Comment stringValue=" "/>
                        </L7p:CommentAssertion>
                        <wsp:OneOrMore wsp:Usage="Required">
                            <wsp:OneOrMore wsp:Usage="Required">
                                <L7p:ComparisonAssertion>
                                    <L7p:CaseSensitive booleanValue="false"/>
                                    <L7p:Expression1 stringValue="${service.apiida.utils.loaded}"/>
                                    <L7p:Expression2 stringValue="true"/>
                                    <L7p:Predicates predicates="included">
                                    <L7p:item binary="included">
                                    <L7p:CaseSensitive booleanValue="false"/>
                                    <L7p:RightValue stringValue="true"/>
                                    </L7p:item>
                                    </L7p:Predicates>
                                </L7p:ComparisonAssertion>
                                <L7p:ComparisonAssertion>
                                    <L7p:CaseSensitive booleanValue="false"/>
                                    <L7p:Expression1 stringValue="${apiida.tempSource}"/>
                                    <L7p:Expression2 stringValue="cache"/>
                                    <L7p:Predicates predicates="included">
                                    <L7p:item binary="included">
                                    <L7p:CaseSensitive booleanValue="false"/>
                                    <L7p:RightValue stringValue="cache"/>
                                    </L7p:item>
                                    </L7p:Predicates>
                                </L7p:ComparisonAssertion>
                                <L7p:assertionComment>
                                    <L7p:Properties mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="[Skip if Internal Error or already cached]"/>
                                    </L7p:entry>
                                    </L7p:Properties>
                                </L7p:assertionComment>
                            </wsp:OneOrMore>
                            <L7p:Encapsulated>
                                <L7p:EncapsulatedAssertionConfigGuid stringValue="2fac74fc-4e2b-47ad-84cc-7dc34a30784e"/>
                                <L7p:EncapsulatedAssertionConfigName stringValue="APIIDA Utility - Store Cache"/>
                                <L7p:Parameters mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="apiida.expires"/>
                                    <L7p:value stringValue="false"/>
                                    </L7p:entry>
                                    <L7p:entry>
                                    <L7p:key stringValue="apiida.id"/>
                                    <L7p:value stringValue="apiida-utils-loggingConfiguration"/>
                                    </L7p:entry>
                                    <L7p:entry>
                                    <L7p:key stringValue="apiida.key"/>
                                    <L7p:value stringValue="apiida"/>
                                    </L7p:entry>
                                    <L7p:entry>
                                    <L7p:key stringValue="apiida.maxSize"/>
                                    <L7p:value stringValue=""/>
                                    </L7p:entry>
                                    <L7p:entry>
                                    <L7p:key stringValue="apiida.payload"/>
                                    <L7p:value stringValue="apiida.tempMessage"/>
                                    </L7p:entry>
                                    <L7p:entry>
                                    <L7p:key stringValue="apiida.timeout"/>
                                    <L7p:value stringValue="${apiida.tempCacheTimeout}"/>
                                    </L7p:entry>
                                </L7p:Parameters>
                            </L7p:Encapsulated>
                            <L7p:assertionComment>
                                <L7p:Properties mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="[Store to Cache]"/>
                                    </L7p:entry>
                                </L7p:Properties>
                            </L7p:assertionComment>
                        </wsp:OneOrMore>
                    </wsp:All>
                    <wsp:All wsp:Usage="Required">
                        <L7p:AuditDetailAssertion>
                            <L7p:Detail stringValue="${apiida.logPreString} [WARNING] APIIDA Util [Logger] - Invalid Configuration. Continuing with no configuration."/>
                            <L7p:Level stringValue="WARNING"/>
                            <L7p:LoggingOnly booleanValue="true"/>
                        </L7p:AuditDetailAssertion>
                        <L7p:FalseAssertion/>
                    </wsp:All>
                </wsp:OneOrMore>
            </wsp:All>
            <L7p:TrueAssertion/>
        </wsp:OneOrMore>
        <L7p:CommentAssertion>
            <L7p:Comment stringValue=" "/>
        </L7p:CommentAssertion>
        <L7p:CommentAssertion>
            <L7p:Comment stringValue="------------------------------------------------------------------------"/>
        </L7p:CommentAssertion>
        <L7p:CommentAssertion>
            <L7p:Comment stringValue="Log Message"/>
        </L7p:CommentAssertion>
        <L7p:CommentAssertion>
            <L7p:Comment stringValue="------------------------------------------------------------------------"/>
        </L7p:CommentAssertion>
        <wsp:OneOrMore wsp:Usage="Required">
            <wsp:All wsp:Usage="Required">
                <L7p:CommentAssertion>
                    <L7p:Comment stringValue=" "/>
                </L7p:CommentAssertion>
                <L7p:CommentAssertion>
                    <L7p:Comment stringValue="Check if logType is allowed and format Message"/>
                </L7p:CommentAssertion>
                <L7p:CommentAssertion>
                    <L7p:Comment stringValue=" "/>
                </L7p:CommentAssertion>
                <wsp:OneOrMore wsp:Usage="Required">
                    <L7p:ComparisonAssertion>
                        <L7p:AssertionComment assertionComment="included">
                            <L7p:Properties mapValue="included">
                                <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="[If not loaded, log everything]"/>
                                </L7p:entry>
                            </L7p:Properties>
                        </L7p:AssertionComment>
                        <L7p:CaseSensitive booleanValue="false"/>
                        <L7p:Expression1 stringValue="${service.apiida.utils.logging.elements}"/>
                        <L7p:Expression2 stringValue="true"/>
                        <L7p:Operator operator="EMPTY"/>
                        <L7p:Predicates predicates="included">
                            <L7p:item binary="included">
                                <L7p:CaseSensitive booleanValue="false"/>
                                <L7p:Operator operator="EMPTY"/>
                                <L7p:RightValue stringValue="true"/>
                            </L7p:item>
                        </L7p:Predicates>
                    </L7p:ComparisonAssertion>
                    <wsp:All wsp:Usage="Required">
                        <L7p:SetVariable>
                            <L7p:Base64Expression stringValue="LCR7c2VydmljZS5hcGlpZGEudXRpbHMubG9nZ2luZy5lbGVtZW50c30s"/>
                            <L7p:VariableToSet stringValue="apiida.tempString"/>
                        </L7p:SetVariable>
                        <L7p:ComparisonAssertion>
                            <L7p:CaseSensitive booleanValue="false"/>
                            <L7p:Expression1 stringValue="${apiida.tempString}"/>
                            <L7p:Operator operatorNull="null"/>
                            <L7p:Predicates predicates="included">
                                <L7p:item dataType="included">
                                    <L7p:Type variableDataType="string"/>
                                </L7p:item>
                                <L7p:item binary="included">
                                    <L7p:CaseSensitive booleanValue="false"/>
                                    <L7p:Operator operator="CONTAINS"/>
                                    <L7p:RightValue stringValue=",${apiida.logType},"/>
                                </L7p:item>
                            </L7p:Predicates>
                        </L7p:ComparisonAssertion>
                    </wsp:All>
                </wsp:OneOrMore>
                <L7p:Regex>
                    <L7p:AutoTarget booleanValue="false"/>
                    <L7p:OtherTargetMessageVariable stringValue="apiida.logString"/>
                    <L7p:Regex stringValue="/\r\n+|\r+|\n+|\t+/i"/>
                    <L7p:RegexName stringValue="remove line breaks"/>
                    <L7p:Replace booleanValue="true"/>
                    <L7p:Replacement stringValue=""/>
                    <L7p:Target target="OTHER"/>
                </L7p:Regex>
                <L7p:CommentAssertion>
                    <L7p:Comment stringValue=" "/>
                </L7p:CommentAssertion>
                <L7p:CommentAssertion>
                    <L7p:Comment stringValue="Perform Scrubber Logic"/>
                </L7p:CommentAssertion>
                <L7p:CommentAssertion>
                    <L7p:Comment stringValue=" "/>
                </L7p:CommentAssertion>
                <wsp:OneOrMore wsp:Usage="Required">
                    <wsp:All wsp:Usage="Required">
                        <L7p:ComparisonAssertion>
                            <L7p:CaseSensitive booleanValue="false"/>
                            <L7p:Expression1 stringValue="${service.apiida.utils.logging.scrubberRules.mainpart}"/>
                            <L7p:Operator operatorNull="null"/>
                            <L7p:Predicates predicates="included">
                                <L7p:item dataType="included">
                                    <L7p:Type variableDataType="string"/>
                                </L7p:item>
                                <L7p:item binary="included">
                                    <L7p:CaseSensitive booleanValue="false"/>
                                    <L7p:Negated booleanValue="true"/>
                                    <L7p:Operator operator="EMPTY"/>
                                    <L7p:RightValue stringValue=""/>
                                </L7p:item>
                            </L7p:Predicates>
                        </L7p:ComparisonAssertion>
                        <L7p:ComparisonAssertion>
                            <L7p:CaseSensitive booleanValue="false"/>
                            <L7p:Expression1 stringValue="${apiida.disableScrubber}"/>
                            <L7p:Operator operatorNull="null"/>
                            <L7p:Predicates predicates="included">
                                <L7p:item dataType="included">
                                    <L7p:Type variableDataType="string"/>
                                </L7p:item>
                                <L7p:item binary="included">
                                    <L7p:CaseSensitive booleanValue="false"/>
                                    <L7p:Negated booleanValue="true"/>
                                    <L7p:RightValue stringValue="true"/>
                                </L7p:item>
                            </L7p:Predicates>
                        </L7p:ComparisonAssertion>
                        <L7p:ResponseXpathAssertion>
                            <L7p:VariablePrefix stringValue="apiida.tempXPath"/>
                            <L7p:XmlMsgSrc stringValue="service.apiida.utils.logging.scrubberRules"/>
                            <L7p:XpathExpression xpathExpressionValue="included">
                                <L7p:Expression stringValue="/scrubberRules/scrubberRule"/>
                                <L7p:Namespaces mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="s"/>
                                    <L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/>
                                    </L7p:entry>
                                </L7p:Namespaces>
                                <L7p:XpathVersion xpathVersion="XPATH_2_0"/>
                            </L7p:XpathExpression>
                        </L7p:ResponseXpathAssertion>
                        <L7p:SetVariable>
                            <L7p:Base64Expression stringValue="ZmFsc2U="/>
                            <L7p:VariableToSet stringValue="apiida.tempMulti.break"/>
                        </L7p:SetVariable>
                        <L7p:ForEachLoop L7p:Usage="Required"
                            loopVariable="apiida.tempXPath.elements" variablePrefix="apiida.tempMulti">
                            <L7p:SetVariable>
                                <L7p:Base64Expression stringValue="JHthcGlpZGEudGVtcE11bHRpLmN1cnJlbnR9"/>
                                <L7p:ContentType stringValue="application/xml; charset=utf-8"/>
                                <L7p:DataType variableDataType="message"/>
                                <L7p:VariableToSet stringValue="apiida.tempMessage"/>
                            </L7p:SetVariable>
                            <L7p:ResponseXpathAssertion>
                                <L7p:VariablePrefix stringValue="apiida.tempScrubFormat"/>
                                <L7p:XmlMsgSrc stringValue="apiida.tempMessage"/>
                                <L7p:XpathExpression xpathExpressionValue="included">
                                    <L7p:Expression stringValue="/scrubberRule/@format"/>
                                    <L7p:Namespaces mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="s"/>
                                    <L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/>
                                    </L7p:entry>
                                    </L7p:Namespaces>
                                    <L7p:XpathVersion xpathVersion="XPATH_2_0"/>
                                </L7p:XpathExpression>
                            </L7p:ResponseXpathAssertion>
                            <L7p:ResponseXpathAssertion>
                                <L7p:VariablePrefix stringValue="apiida.tempScrubTag"/>
                                <L7p:XmlMsgSrc stringValue="apiida.tempMessage"/>
                                <L7p:XpathExpression xpathExpressionValue="included">
                                    <L7p:Expression stringValue="/scrubberRule/@tagName"/>
                                    <L7p:Namespaces mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="s"/>
                                    <L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/>
                                    </L7p:entry>
                                    </L7p:Namespaces>
                                    <L7p:XpathVersion xpathVersion="XPATH_2_0"/>
                                </L7p:XpathExpression>
                            </L7p:ResponseXpathAssertion>
                            <L7p:ResponseXpathAssertion>
                                <L7p:VariablePrefix stringValue="apiida.tempScrubRep"/>
                                <L7p:XmlMsgSrc stringValue="apiida.tempMessage"/>
                                <L7p:XpathExpression xpathExpressionValue="included">
                                    <L7p:Expression stringValue="/scrubberRule/@replacement"/>
                                    <L7p:Namespaces mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="s"/>
                                    <L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/>
                                    </L7p:entry>
                                    </L7p:Namespaces>
                                    <L7p:XpathVersion xpathVersion="XPATH_2_0"/>
                                </L7p:XpathExpression>
                            </L7p:ResponseXpathAssertion>
                            <wsp:OneOrMore wsp:Usage="Required">
                                <wsp:All wsp:Usage="Required">
                                    <L7p:ComparisonAssertion>
                                    <L7p:CaseSensitive booleanValue="false"/>
                                    <L7p:Expression1 stringValue="${apiida.tempScrubFormat.result}"/>
                                    <L7p:Operator operatorNull="null"/>
                                    <L7p:Predicates predicates="included">
                                    <L7p:item dataType="included">
                                    <L7p:Type variableDataType="string"/>
                                    </L7p:item>
                                    <L7p:item binary="included">
                                    <L7p:CaseSensitive booleanValue="false"/>
                                    <L7p:RightValue stringValue="raw"/>
                                    </L7p:item>
                                    </L7p:Predicates>
                                    </L7p:ComparisonAssertion>
                                    <L7p:SetVariable>
                                    <L7p:Base64Expression stringValue="PHJvb3Q+PC9yb290Pg=="/>
                                    <L7p:ContentType stringValue="application/xml; charset=utf-8"/>
                                    <L7p:DataType variableDataType="message"/>
                                    <L7p:VariableToSet stringValue="apiida.tempMessage2"/>
                                    </L7p:SetVariable>
                                    <L7p:XslTransformation>
                                    <L7p:Direction intValue="-1"/>
                                    <L7p:MsgVarPrefix stringValue="apiida.tempXPath"/>
                                    <L7p:OtherTargetMessageVariable stringValue="apiida.tempMessage2"/>
                                    <L7p:ResourceInfo staticResourceInfo="included">
                                    <L7p:Document stringValueReference="inline"><![CDATA[<xsl:stylesheet version="2.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
    <xsl:output encoding="utf-8" indent="yes" omit-xml-declaration="yes"/>
    <xsl:strip-space elements="*"/>
    
    <xsl:param name="apiida.logString" select="''"/>
    <xsl:param name="apiida.tempScrubTag.result" select="''"/>
    <xsl:param name="apiida.tempScrubRep.result" select="''"/>
    <xsl:template match="/">
        <root>
            <result>
                <xsl:value-of select="replace($apiida.logString,$apiida.tempScrubTag.result,$apiida.tempScrubRep.result)"/>               
            </result>
        </root>
    </xsl:template>
</xsl:stylesheet>]]></L7p:Document>
                                    </L7p:ResourceInfo>
                                    <L7p:Target target="OTHER"/>
                                    <L7p:TransformName stringValue=""/>
                                    <L7p:XsltVersion stringValue="2.0"/>
                                    </L7p:XslTransformation>
                                    <L7p:ResponseXpathAssertion>
                                    <L7p:VariablePrefix stringValue="apiida.tempXPath"/>
                                    <L7p:XmlMsgSrc stringValue="apiida.tempMessage2"/>
                                    <L7p:XpathExpression xpathExpressionValue="included">
                                    <L7p:Expression stringValue="/root/result"/>
                                    <L7p:Namespaces mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="s"/>
                                    <L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/>
                                    </L7p:entry>
                                    </L7p:Namespaces>
                                    <L7p:XpathVersion xpathVersion="XPATH_1_0"/>
                                    </L7p:XpathExpression>
                                    </L7p:ResponseXpathAssertion>
                                    <L7p:SetVariable>
                                    <L7p:Base64Expression stringValue="JHthcGlpZGEudGVtcFhQYXRoLnJlc3VsdH0="/>
                                    <L7p:VariableToSet stringValue="apiida.logString"/>
                                    </L7p:SetVariable>
                                    <L7p:assertionComment>
                                    <L7p:Properties mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="[Format RAW]"/>
                                    </L7p:entry>
                                    </L7p:Properties>
                                    </L7p:assertionComment>
                                </wsp:All>
                                <wsp:All wsp:Usage="Required">
                                    <L7p:ComparisonAssertion>
                                    <L7p:CaseSensitive booleanValue="false"/>
                                    <L7p:Expression1 stringValue="${apiida.tempScrubFormat.result}"/>
                                    <L7p:Operator operatorNull="null"/>
                                    <L7p:Predicates predicates="included">
                                    <L7p:item dataType="included">
                                    <L7p:Type variableDataType="string"/>
                                    </L7p:item>
                                    <L7p:item binary="included">
                                    <L7p:CaseSensitive booleanValue="false"/>
                                    <L7p:RightValue stringValue="all"/>
                                    </L7p:item>
                                    </L7p:Predicates>
                                    </L7p:ComparisonAssertion>
                                    <L7p:Regex>
                                    <L7p:AutoTarget booleanValue="false"/>
                                    <L7p:OtherTargetMessageVariable stringValue="apiida.logString"/>
                                    <L7p:PatternContainsVariables booleanValue="true"/>
                                    <L7p:Regex stringValue="&lt;${apiida.tempScrubTag.result}>.*&lt;/${apiida.tempScrubTag.result}"/>
                                    <L7p:Replace booleanValue="true"/>
                                    <L7p:Replacement stringValue="&lt;${apiida.tempScrubTag.result}>${apiida.tempScrubRep.result}&lt;/${apiida.tempScrubTag.result}"/>
                                    <L7p:Target target="OTHER"/>
                                    </L7p:Regex>
                                    <L7p:Regex>
                                    <L7p:AutoTarget booleanValue="false"/>
                                    <L7p:OtherTargetMessageVariable stringValue="apiida.logString"/>
                                    <L7p:PatternContainsVariables booleanValue="true"/>
                                    <L7p:Regex stringValue="&quot;${apiida.tempScrubTag.result}&quot;\s*:\s*&quot;.*&quot;"/>
                                    <L7p:Replace booleanValue="true"/>
                                    <L7p:Replacement stringValue="&quot;${apiida.tempScrubTag.result}&quot;:&quot;${apiida.tempScrubRep.result}&quot;"/>
                                    <L7p:Target target="OTHER"/>
                                    </L7p:Regex>
                                    <L7p:Regex>
                                    <L7p:AutoTarget booleanValue="false"/>
                                    <L7p:OtherTargetMessageVariable stringValue="apiida.logString"/>
                                    <L7p:PatternContainsVariables booleanValue="true"/>
                                    <L7p:Regex stringValue="\A?${apiida.tempScrubTag.result}=[^&amp;]+&amp;*"/>
                                    <L7p:Replace booleanValue="true"/>
                                    <L7p:Replacement stringValue="${apiida.tempScrubTag.result}=${apiida.tempScrubRep.result}"/>
                                    <L7p:Target target="OTHER"/>
                                    </L7p:Regex>
                                    <L7p:assertionComment>
                                    <L7p:Properties mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="[Format ALL]"/>
                                    </L7p:entry>
                                    </L7p:Properties>
                                    </L7p:assertionComment>
                                </wsp:All>
                                <wsp:All wsp:Usage="Required">
                                    <L7p:ComparisonAssertion>
                                    <L7p:CaseSensitive booleanValue="false"/>
                                    <L7p:Expression1 stringValue="${apiida.tempScrubFormat.result}"/>
                                    <L7p:Operator operatorNull="null"/>
                                    <L7p:Predicates predicates="included">
                                    <L7p:item dataType="included">
                                    <L7p:Type variableDataType="string"/>
                                    </L7p:item>
                                    <L7p:item binary="included">
                                    <L7p:CaseSensitive booleanValue="false"/>
                                    <L7p:RightValue stringValue="xml"/>
                                    </L7p:item>
                                    </L7p:Predicates>
                                    </L7p:ComparisonAssertion>
                                    <L7p:Regex>
                                    <L7p:AutoTarget booleanValue="false"/>
                                    <L7p:OtherTargetMessageVariable stringValue="apiida.logString"/>
                                    <L7p:PatternContainsVariables booleanValue="true"/>
                                    <L7p:Regex stringValue="&lt;${apiida.tempScrubTag.result}>.*&lt;/${apiida.tempScrubTag.result}"/>
                                    <L7p:Replace booleanValue="true"/>
                                    <L7p:Replacement stringValue="&lt;${apiida.tempScrubTag.result}>${apiida.tempScrubRep.result}&lt;/${apiida.tempScrubTag.result}"/>
                                    <L7p:Target target="OTHER"/>
                                    </L7p:Regex>
                                    <L7p:assertionComment>
                                    <L7p:Properties mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="[Format XML]"/>
                                    </L7p:entry>
                                    </L7p:Properties>
                                    </L7p:assertionComment>
                                </wsp:All>
                                <wsp:All wsp:Usage="Required">
                                    <L7p:ComparisonAssertion>
                                    <L7p:CaseSensitive booleanValue="false"/>
                                    <L7p:Expression1 stringValue="${apiida.tempScrubFormat.result}"/>
                                    <L7p:Operator operatorNull="null"/>
                                    <L7p:Predicates predicates="included">
                                    <L7p:item dataType="included">
                                    <L7p:Type variableDataType="string"/>
                                    </L7p:item>
                                    <L7p:item binary="included">
                                    <L7p:CaseSensitive booleanValue="false"/>
                                    <L7p:RightValue stringValue="json"/>
                                    </L7p:item>
                                    </L7p:Predicates>
                                    </L7p:ComparisonAssertion>
                                    <L7p:Regex>
                                    <L7p:AutoTarget booleanValue="false"/>
                                    <L7p:OtherTargetMessageVariable stringValue="apiida.logString"/>
                                    <L7p:PatternContainsVariables booleanValue="true"/>
                                    <L7p:Regex stringValue="&quot;${apiida.tempScrubTag.result}&quot;\s*:\s*&quot;.*&quot;"/>
                                    <L7p:Replace booleanValue="true"/>
                                    <L7p:Replacement stringValue="&quot;${apiida.tempScrubTag.result}&quot;:&quot;${apiida.tempScrubRep.result}&quot;"/>
                                    <L7p:Target target="OTHER"/>
                                    </L7p:Regex>
                                    <L7p:assertionComment>
                                    <L7p:Properties mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="[Format JSON]"/>
                                    </L7p:entry>
                                    </L7p:Properties>
                                    </L7p:assertionComment>
                                </wsp:All>
                                <wsp:All wsp:Usage="Required">
                                    <L7p:ComparisonAssertion>
                                    <L7p:CaseSensitive booleanValue="false"/>
                                    <L7p:Expression1 stringValue="${apiida.tempScrubFormat.result}"/>
                                    <L7p:Operator operatorNull="null"/>
                                    <L7p:Predicates predicates="included">
                                    <L7p:item dataType="included">
                                    <L7p:Type variableDataType="string"/>
                                    </L7p:item>
                                    <L7p:item binary="included">
                                    <L7p:CaseSensitive booleanValue="false"/>
                                    <L7p:RightValue stringValue="url"/>
                                    </L7p:item>
                                    </L7p:Predicates>
                                    </L7p:ComparisonAssertion>
                                    <L7p:Regex>
                                    <L7p:AutoTarget booleanValue="false"/>
                                    <L7p:OtherTargetMessageVariable stringValue="apiida.logString"/>
                                    <L7p:PatternContainsVariables booleanValue="true"/>
                                    <L7p:Regex stringValue="\A?${apiida.tempScrubTag.result}=[^&amp;]+&amp;*"/>
                                    <L7p:Replace booleanValue="true"/>
                                    <L7p:Replacement stringValue="${apiida.tempScrubTag.result}=${apiida.tempScrubRep.result}"/>
                                    <L7p:Target target="OTHER"/>
                                    </L7p:Regex>
                                    <L7p:assertionComment>
                                    <L7p:Properties mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="[Format URL]"/>
                                    </L7p:entry>
                                    </L7p:Properties>
                                    </L7p:assertionComment>
                                </wsp:All>
                                <L7p:TrueAssertion/>
                                <L7p:assertionComment>
                                    <L7p:Properties mapValue="included">
                                    <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="[Scrub for corrent Format]"/>
                                    </L7p:entry>
                                    </L7p:Properties>
                                </L7p:assertionComment>
                            </wsp:OneOrMore>
                        </L7p:ForEachLoop>
                    </wsp:All>
                    <L7p:TrueAssertion/>
                </wsp:OneOrMore>
                <L7p:CommentAssertion>
                    <L7p:Comment stringValue=" "/>
                </L7p:CommentAssertion>
                <L7p:CommentAssertion>
                    <L7p:Comment stringValue="Log actual Message"/>
                </L7p:CommentAssertion>
                <L7p:CommentAssertion>
                    <L7p:Comment stringValue=" "/>
                </L7p:CommentAssertion>
                <L7p:SetVariable>
                    <L7p:Base64Expression stringValue="JHthcGlpZGEubG9nUHJlU3RyaW5nfSBbJHthcGlpZGEubG9nVHlwZX1dICR7YXBpaWRhLmxvZ1N0cmluZ30="/>
                    <L7p:VariableToSet stringValue="apiida.logString"/>
                </L7p:SetVariable>
                <wsp:OneOrMore wsp:Usage="Required">
                    <wsp:All wsp:Usage="Required">
                        <L7p:Regex>
                            <L7p:AutoTarget booleanValue="false"/>
                            <L7p:OtherTargetMessageVariable stringValue="apiida.logType"/>
                            <L7p:Regex stringValue="^(ERROR|WARNING)$"/>
                            <L7p:Replacement stringValue=""/>
                            <L7p:Target target="OTHER"/>
                        </L7p:Regex>
                        <L7p:AuditDetailAssertion>
                            <L7p:Detail stringValue="${apiida.logString}"/>
                            <L7p:Level stringValue="WARNING"/>
                            <L7p:LoggingOnly booleanValue="true"/>
                        </L7p:AuditDetailAssertion>
                        <L7p:assertionComment>
                            <L7p:Properties mapValue="included">
                                <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue="[Log as ERROR or WARNING]"/>
                                </L7p:entry>
                            </L7p:Properties>
                        </L7p:assertionComment>
                    </wsp:All>
                    <L7p:AuditDetailAssertion>
                        <L7p:Detail stringValue="${apiida.logString}"/>
                        <L7p:LoggingOnly booleanValue="true"/>
                    </L7p:AuditDetailAssertion>
                    <L7p:assertionComment>
                        <L7p:Properties mapValue="included">
                            <L7p:entry>
                                <L7p:key stringValue="RIGHT.COMMENT"/>
                                <L7p:value stringValue="[Log actual message]"/>
                            </L7p:entry>
                        </L7p:Properties>
                    </L7p:assertionComment>
                </wsp:OneOrMore>
            </wsp:All>
            <L7p:TrueAssertion/>
        </wsp:OneOrMore>
    </wsp:All>
</wsp:Policy>
